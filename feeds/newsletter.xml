<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">

  <channel>
    <title>Alexandru Nedelcu</title>
    <description>On programming and personal projects</description>
    <link>https://alexn.org/</link>
    <atom:link href="https://alexn.org/feeds/newsletter.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 27 Oct 2025 05:36:17 +0000</pubDate>
    <lastBuildDate>Mon, 27 Oct 2025 05:36:17 +0000</lastBuildDate>
  	<language>en</language>
    <sy:updatePeriod>hourly</sy:updatePeriod>
	  <sy:updateFrequency>1</sy:updateFrequency>
    <generator>Jekyll v4.4.1</generator>
    

<item>
  <title>Scala 3 / No Indent</title>
  <description>Scala 3 came with “significant indentation”. And I still dislike it, despite trying hard, so I’m switching back to braces.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/26/scala-3-no-indent/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-scala3-indentation-4-spaces.png?202510270536&quot; alt=&quot;&quot; width=&quot;1786&quot; height=&quot;1116&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala 3 came with “significant indentation”. And I still dislike it, despite trying hard, so I’m switching back to braces.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/26/scala-3-no-indent/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 26 Oct 2025 08:35:53 +0000</pubDate>
  <dc:modified>Mon, 27 Oct 2025 05:07:05 +0000</dc:modified>
  <atom:modified>Mon, 27 Oct 2025 05:07:05 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/10/26/scala-3-no-indent/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/10/26/scala-3-no-indent/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>Programming</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>Scala 3 / Match Types</title>
  <description>Scala has a neat new feature, resembling TypeScript’s “conditional types”, but more powerful.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/25/scala-3-match-types/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2025-scala-match-types.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala has a neat new feature, resembling TypeScript’s “conditional types”, but more powerful.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/25/scala-3-match-types/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sat, 25 Oct 2025 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 27 Oct 2025 05:33:38 +0000</dc:modified>
  <atom:modified>Mon, 27 Oct 2025 05:33:38 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/10/25/scala-3-match-types/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/10/25/scala-3-match-types/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>Programming</category>
  <category>Scala</category>
  <category>Scala 3</category>
  <category>TypeScript</category>
  </item>


<item>
  <title>Update on Math Formulas via Copilot</title>
  <description>Or how I&apos;m using GitHub&apos;s Copilot in Agent mode for yak shaving, evolving my Jekyll-powered website for rendering mathematical formulas by SVG images, instead of heavy JavaScript.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/21/update-on-math-formulas/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2025-math-github-copilot.png?202510270536&quot; alt=&quot;&quot; width=&quot;1536&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
Or how I&apos;m using GitHub&apos;s Copilot in Agent mode for yak shaving, evolving my Jekyll-powered website for rendering mathematical formulas by SVG images, instead of heavy JavaScript.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/21/update-on-math-formulas/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2025/10/21/update-on-math-formulas/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/10/21/update-on-math-formulas/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>AI</category>
  <category>Blogging</category>
  <category>Jekyll</category>
  <category>Self Hosting</category>
  </item>


<item>
  <title>Math Pill #2: Square Roots</title>
  <description>Simplifying radicals is strangely satisfying.</description>
  <content:encoded>&lt;p&gt;Simplifying radicals is strangely satisfying.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/15/math-pill-2-square-roots/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 15 Oct 2025 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2025/10/15/math-pill-2-square-roots/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/10/15/math-pill-2-square-roots/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Math</category>
  <category>Learning</category>
  </item>


<item>
  <title>Math Pill #1: Sums</title>
  <description>My son started high-school, so I’m helping him with mathematics. It’s been a long time, and I have to re-learn. But it’s fun, and I’m hoping to start a series of articles.</description>
  <content:encoded>&lt;p&gt;My son started high-school, so I’m helping him with mathematics. It’s been a long time, and I have to re-learn. But it’s fun, and I’m hoping to start a series of articles.

      &lt;/p&gt;
&lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/15/math-pill-1-sums/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 15 Oct 2025 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2025/10/15/math-pill-1-sums/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/10/15/math-pill-1-sums/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Learning</category>
  <category>Math</category>
  </item>


<item>
  <title>Outsourced Voices, Outsourced Minds</title>
  <description>We are not machines, or automatons. We were fooled, but we can fight back. Don’t let algorithms control your thoughts and actions.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/13/outsourced-voices-outsourced-minds/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2025-thomas-in-a-box.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;1562&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;My cat, Thomas, sitting in a box, telling me that maybe it&apos;s better if I went to touch some grass.
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;We are not machines, or automatons. We were fooled, but we can fight back. Don’t let algorithms control your thoughts and actions.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/10/13/outsourced-voices-outsourced-minds/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 13 Oct 2025 05:24:14 +0000</pubDate>
  <dc:modified>Mon, 13 Oct 2025 13:02:18 +0000</dc:modified>
  <atom:modified>Mon, 13 Oct 2025 13:02:18 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/10/13/outsourced-voices-outsourced-minds/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/10/13/outsourced-voices-outsourced-minds/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>AI</category>
  <category>Blogging</category>
  <category>Opinion</category>
  <category>Politics</category>
  <category>Web</category>
  </item>


<item>
  <title>Scala&#39;s Gamble with Direct Style</title>
  <description>Scala does not move in the direction of more monadic IO, but rather in the direction of “direct style”, preferring continuations to monads, but without providing support for continuations out of the box.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/08/29/scala-gamble-with-direct-style/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-stairs.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;1200&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;The staircase at EPFL that inspired Scala&apos;s logo.&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala does not move in the direction of more monadic IO, but rather in the direction of “direct style”, preferring continuations to monads, but without providing support for continuations out of the box.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/08/29/scala-gamble-with-direct-style/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 29 Aug 2025 05:33:16 +0000</pubDate>
  <dc:modified>Fri, 29 Aug 2025 08:25:48 +0000</dc:modified>
  <atom:modified>Fri, 29 Aug 2025 08:25:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/08/29/scala-gamble-with-direct-style/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/08/29/scala-gamble-with-direct-style/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Opinion</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>Backup Script for My Cloud Storage</title>
  <description>This is a script that I use for backing up my OneDrive to a Nextcloud instance.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/04/18/backup-script-for-my-cloud-storage/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2025-backup-cloud.png?202510270536&quot; alt=&quot;&quot; width=&quot;1972&quot; height=&quot;504&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;This is a script that I use for backing up my OneDrive to a Nextcloud instance.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/04/18/backup-script-for-my-cloud-storage/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 18 Apr 2025 15:53:12 +0000</pubDate>
  <dc:modified>Fri, 18 Apr 2025 16:59:58 +0000</dc:modified>
  <atom:modified>Fri, 18 Apr 2025 16:59:58 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/04/18/backup-script-for-my-cloud-storage/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/04/18/backup-script-for-my-cloud-storage/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Python</category>
  <category>Self Hosting</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Tagged vs Untagged Unions (in Scala)</title>
  <description>What’s the difference between Option[A] and A | Null? What about between Either[A, B] and A | B?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/04/02/tagged-vs-untagged-unions-in-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2025-untagged-types.png?202510270536&quot; alt=&quot;&quot; width=&quot;2088&quot; height=&quot;1156&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;What’s the difference between &lt;code&gt;Option[A]&lt;/code&gt; and &lt;code&gt;A | Null&lt;/code&gt;? What about between &lt;code&gt;Either[A, B]&lt;/code&gt; and &lt;code&gt;A | B&lt;/code&gt;?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/04/02/tagged-vs-untagged-unions-in-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 02 Apr 2025 08:30:19 +0000</pubDate>
  <dc:modified>Wed, 02 Apr 2025 09:40:02 +0000</dc:modified>
  <atom:modified>Wed, 02 Apr 2025 09:40:02 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/04/02/tagged-vs-untagged-unions-in-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/04/02/tagged-vs-untagged-unions-in-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Scala 3</category>
  <category>Programming</category>
  </item>


<item>
  <title>My Favorite Firefox Extensions</title>
  <description>In my previous post, I mentioned that I now use Firefox as my main browser and you should too. Firefox’s strength is its extensions, with many available on Android devices as well. Here’s a list of my favorites.</description>
  <content:encoded>&lt;p&gt;In my previous post, I mentioned that I now use Firefox as my main browser and you should too. Firefox’s strength is its extensions, with many available on Android devices as well. Here’s a list of my favorites.


      &lt;/p&gt;
&lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/03/15/firefox-extensions/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sat, 15 Mar 2025 18:29:27 +0000</pubDate>
  <dc:modified>Sat, 15 Mar 2025 21:38:27 +0000</dc:modified>
  <atom:modified>Sat, 15 Mar 2025 21:38:27 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/03/15/firefox-extensions/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/03/15/firefox-extensions/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Browser</category>
  <category>Open Source</category>
  <category>Products</category>
  <category>Web</category>
  </item>


<item>
  <title>Use Firefox in 2025</title>
  <description>I grew up with the Internet, since before people had Internet connections at home or in their pocket. The browser, being the window to the open web, holds a special place in my heart. In this article I’m suggesting the use of Firefox in 2025, for both technical and political reasons, as it’s still the “user agent” that it set out to be.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/03/03/use-firefox/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2025-firefox.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;770&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  I grew up with the Internet, since before people had Internet connections at home or in their pocket. The browser, being the window to the open web, holds a special place in my heart. In this article I’m suggesting the use of Firefox in 2025, for both technical and political reasons, as it’s still the “user agent” that it set out to be.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/03/03/use-firefox/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 03 Mar 2025 21:51:40 +0000</pubDate>
  <dc:modified>Sat, 15 Mar 2025 18:27:58 +0000</dc:modified>
  <atom:modified>Sat, 15 Mar 2025 18:27:58 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/03/03/use-firefox/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/03/03/use-firefox/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Browser</category>
  <category>Open Source</category>
  <category>Politics</category>
  <category>Products</category>
  <category>Web</category>
  </item>


<item>
  <title>Self-hosted Bookmarks Manager</title>
  <description>I like having a database of links I encounter on the web, like a searchable database, complete with archive links as well. I found a solution.</description>
  <content:encoded>&lt;p&gt;I like having a database of links I encounter on the web, like a searchable database, complete with archive links as well. I found a solution.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/02/14/self-hosted-bookmarks-manager/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 14 Feb 2025 05:03:54 +0000</pubDate>
  <dc:modified>Fri, 14 Feb 2025 05:23:09 +0000</dc:modified>
  <atom:modified>Fri, 14 Feb 2025 05:23:09 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/02/14/self-hosted-bookmarks-manager/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/02/14/self-hosted-bookmarks-manager/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Docker</category>
  <category>Open Source</category>
  <category>Self Hosting</category>
  <category>Server</category>
  <category>Web</category>
  </item>


<item>
  <title>Auto-updating Docker containers</title>
  <description>I’m self-hosting stuff using Docker on my own server. One problem that comes up for a personal server is to keep it up to date, as old software has security issues. And we don’t want to self-host servers that can become vulnerable due to neglect.</description>
  <content:encoded>&lt;p&gt;I’m self-hosting stuff using Docker on my own server. One problem that comes up for a personal server is to keep it up to date, as old software has security issues. And we don’t want to self-host servers that can become vulnerable due to neglect.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2025/02/14/updating-docker-containers/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 14 Feb 2025 05:00:00 +0000</pubDate>
  <dc:modified>Fri, 14 Feb 2025 13:01:58 +0000</dc:modified>
  <atom:modified>Fri, 14 Feb 2025 13:01:58 +0000</atom:modified>
  <link>https://alexn.org/blog/2025/02/14/updating-docker-containers/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2025/02/14/updating-docker-containers/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Docker</category>
  <category>Self Hosting</category>
  <category>Server</category>
  </item>


<item>
  <title>Join the Open Web</title>
  <description>Now that you’ve seen the dangers of social media, the question is, what are you going to do about it?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/11/20/join-the-open-web/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2024-www-painting.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;694&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;&quot;Discussing The Divine Comedy With Dante&quot;, a painting by Dai Dudu, Li Tiezi and Zhang An
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Now that you’ve seen the dangers of social media, the question is, what are you going to do about it?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/11/20/join-the-open-web/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 20 Nov 2024 07:43:54 +0000</pubDate>
  <dc:modified>Wed, 20 Nov 2024 11:17:04 +0000</dc:modified>
  <atom:modified>Wed, 20 Nov 2024 11:17:04 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/11/20/join-the-open-web/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/11/20/join-the-open-web/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Opinion</category>
  <category>Politics</category>
  <category>Web</category>
  </item>


<item>
  <title>Cancellable HTTP requests via Scala&#39;s Tapir</title>
  <description>This sample shows an HTTP server and an HTTP client that can cleanly cancel requests. It’s using Tapir and Sttp, with Netty and AsyncHttpClient backends, all powered by Cats-Effect.</description>
  <content:encoded>&lt;p&gt;This sample shows an HTTP server and an HTTP client that can cleanly cancel requests. It’s using Tapir and Sttp, with Netty and AsyncHttpClient backends, all powered by Cats-Effect.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/09/29/cancellable-http-server-client-requests-via-scala-s-tapir/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 29 Sep 2024 08:21:34 +0000</pubDate>
  <dc:modified>Sun, 29 Sep 2024 09:26:11 +0000</dc:modified>
  <atom:modified>Sun, 29 Sep 2024 09:26:11 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/09/29/cancellable-http-server-client-requests-via-scala-s-tapir/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/09/29/cancellable-http-server-client-requests-via-scala-s-tapir/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cats Effect</category>
  <category>Programming</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Trusting Open-Source</title>
  <description>“Shrink-wrapped”, “off-the-shelf” apps, or what the young have come to know as premium apps from the app store, are destined to languish, to become expensive subscriptions, or to be sold to shady companies that will sell your data or make your computer part of a botnet. Proprietary apps are destined to either disappear, most of them taking your data with them, or to rip you off.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/09/06/trusting-open-source/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2024-thomas-surprised.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;1726&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;My cat, Thomas, trying to understand &quot;source available&quot; licenses
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
“Shrink-wrapped”, “off-the-shelf” apps, or what the young have come to know as premium apps from the app store, are destined to languish, to become expensive subscriptions, or to be sold to shady companies that will sell your data or make your computer part of a botnet. Proprietary apps are destined to either disappear, most of them taking your data with them, or to rip you off.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/09/06/trusting-open-source/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2024/09/06/trusting-open-source/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/09/06/trusting-open-source/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Open Source</category>
  <category>Proprietary Software</category>
  </item>


<item>
  <title>1Password vs. Bitwarden</title>
  <description>Optimising costs and my workflow is a personal obsession of mine. I&apos;ve been a 1Password user for years, and I keep trying Bitwarden. If you want to pick between the two, here are the differences between them at the time of writing.</description>
  <content:encoded>&lt;p&gt;Optimising costs and my workflow is a personal obsession of mine. I&apos;ve been a 1Password user for years, and I keep trying Bitwarden. If you want to pick between the two, here are the differences between them at the time of writing.


      &lt;/p&gt;
&lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/08/20/1password-vs-bitwarden/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 20 Aug 2024 06:41:41 +0000</pubDate>
  <dc:modified>Wed, 04 Sep 2024 06:58:20 +0000</dc:modified>
  <atom:modified>Wed, 04 Sep 2024 06:58:20 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/08/20/1password-vs-bitwarden/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/08/20/1password-vs-bitwarden/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Products</category>
  <category>Self Hosting</category>
  <category>Open Source</category>
  </item>


<item>
  <title>Cryptographically Strong Random on the JVM</title>
  <description>When generating random numbers for certain use-cases, such as when generating keys / IDs, it’s recommended for the random function to be “cryptographically strong”. Otherwise, attackers could predict random values, enabling serious security vulnerabilities.</description>
  <content:encoded>&lt;p&gt;When generating random numbers for certain use-cases, such as when generating keys / IDs, it’s recommended for the random function to be “cryptographically strong”. Otherwise, attackers could predict random values, enabling serious security vulnerabilities.

      &lt;/p&gt;
&lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/08/13/cryptographically-strong-random-jvm/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 13 Aug 2024 08:17:53 +0000</pubDate>
  <dc:modified>Tue, 13 Aug 2024 13:12:44 +0000</dc:modified>
  <atom:modified>Tue, 13 Aug 2024 13:12:44 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/08/13/cryptographically-strong-random-jvm/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/08/13/cryptographically-strong-random-jvm/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Java</category>
  <category>Scala</category>
  <category>Kotlin</category>
  <category>Programming</category>
  <category>Security</category>
  <category>Snippet</category>
  </item>


<item>
  <title>On Advertising and Tracking</title>
  <description>Ads are now, unfortunately, a vehicle for malware, scams, or services that are deceptive and barely legal. But, should we block ads?</description>
  <content:encoded>&lt;p&gt;Ads are now, unfortunately, a vehicle for malware, scams, or services that are deceptive and barely legal. But, should we block ads?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/08/12/on-advertising-and-tracking/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 12 Aug 2024 08:46:00 +0000</pubDate>
  <dc:modified>Tue, 13 Aug 2024 07:20:52 +0000</dc:modified>
  <atom:modified>Tue, 13 Aug 2024 07:20:52 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/08/12/on-advertising-and-tracking/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/08/12/on-advertising-and-tracking/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Opinion</category>
  <category>Web</category>
  </item>


<item>
  <title>Scala&#39;s Future</title>
  <description>As software developers, we invest a lot in our tools. Time, energy, and feelings. We recommend tools to others; we build on top; we belong to a community; we contribute; hence we&apos;re eventually becoming stakeholders. And there&apos;s no other tool more clamored or risky in our belt than the programming language. Well, gather around, kids, let me tell you two stories from my past with the software industry…</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/01/10/scala-future/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2024-scala-hexa.png?202510270536&quot; alt=&quot;&quot; width=&quot;3555&quot; height=&quot;2000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;The Scala logo, in the shape of a hexagon, meant to fit the logos of certain well known libraries, as a hint 😜&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
As software developers, we invest a lot in our tools. Time, energy, and feelings. We recommend tools to others; we build on top; we belong to a community; we contribute; hence we&apos;re eventually becoming stakeholders. And there&apos;s no other tool more clamored or risky in our belt than the programming language. Well, gather around, kids, let me tell you two stories from my past with the software industry…


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/01/10/scala-future/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 10 Jan 2024 17:37:53 +0000</pubDate>
  <dc:modified>Thu, 11 Jan 2024 11:49:21 +0000</dc:modified>
  <atom:modified>Thu, 11 Jan 2024 11:49:21 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/01/10/scala-future/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/01/10/scala-future/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Scala 3</category>
  <category>Programming</category>
  <category>Opinion</category>
  </item>


<item>
  <title>Update NextDNS with a Scala CLI script</title>
  <description>Today I was reminded how awesome Scala is for scripting, via Scala CLI. And it goes beyond having “batteries included”.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/01/10/update-nextdns-with-a-scala-cli-script/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2014-scala-cli.png?202510270536&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;1250&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
    Today I was reminded how awesome Scala is for scripting, via Scala CLI. And it goes beyond having “batteries included”.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/01/10/update-nextdns-with-a-scala-cli-script/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 10 Jan 2024 11:14:14 +0000</pubDate>
  <dc:modified>Wed, 10 Jan 2024 16:04:09 +0000</dc:modified>
  <atom:modified>Wed, 10 Jan 2024 16:04:09 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/01/10/update-nextdns-with-a-scala-cli-script/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/01/10/update-nextdns-with-a-scala-cli-script/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>CLI</category>
  <category>Scala</category>
  <category>Shell</category>
  <category>Snippet</category>
  </item>


<item>
  <title>New Year Resolutions</title>
  <description>A new year is upon us, and it’s customary to make resolutions. The problem with new year resolutions is that we tend to forget them in about a week. So, how to make resolutions that stick?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/01/01/new-year-resolutions/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2024-new-year.png?202510270536&quot; alt=&quot;&quot; width=&quot;2304&quot; height=&quot;1440&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;A new year is upon us, and it’s customary to make resolutions. The problem with new year resolutions is that we tend to forget them in about a week. So, how to make resolutions that stick?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2024/01/01/new-year-resolutions/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 01 Jan 2024 09:21:44 +0000</pubDate>
  <dc:modified>Mon, 01 Jan 2024 09:21:44 +0000</dc:modified>
  <atom:modified>Mon, 01 Jan 2024 09:21:44 +0000</atom:modified>
  <link>https://alexn.org/blog/2024/01/01/new-year-resolutions/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2024/01/01/new-year-resolutions/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  </item>


<item>
  <title>December Adventure update, thoughts on Rust</title>
  <description>This is an update to my december adventure, in which I took it upon myself to learn the Rust programming langauge.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/12/12/december-adventure-rust/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-december-adventure-2.png?202510270536&quot; alt=&quot;&quot; width=&quot;1638&quot; height=&quot;1024&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  This is an update to my december adventure, in which I took it upon myself to learn the Rust programming langauge.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/12/12/december-adventure-rust/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 12 Dec 2023 10:00:00 +0000</pubDate>
  <dc:modified>Tue, 12 Dec 2023 13:53:13 +0000</dc:modified>
  <atom:modified>Tue, 12 Dec 2023 13:53:13 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/12/12/december-adventure-rust/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/12/12/december-adventure-rust/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Programming</category>
  <category>Languages</category>
  <category>Rust</category>
  <category>Scala</category>
  </item>


<item>
  <title>December Adventure: Learning Rust</title>
  <description>This December I’m off to a great personal adventure in programming. Everyone can have their own fun December Adventure. You pick something you want to do, or maybe learn, and you do a little of it everyday, as long as it involves some coding.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/12/04/december-adventure/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-december.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;2560&quot; height=&quot;1812&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Postcard by publisher Brück &amp; Sohn in Meißen.
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  This December I’m off to a great personal adventure in programming. Everyone can have their own fun December Adventure. You pick something you want to do, or maybe learn, and you do a little of it everyday, as long as it involves some coding.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/12/04/december-adventure/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 04 Dec 2023 11:04:09 +0000</pubDate>
  <dc:modified>Mon, 04 Dec 2023 16:59:29 +0000</dc:modified>
  <atom:modified>Mon, 04 Dec 2023 16:59:29 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/12/04/december-adventure/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/12/04/december-adventure/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Books</category>
  <category>Languages</category>
  <category>Personal</category>
  <category>Programming</category>
  <category>Rust</category>
  <category>Scala</category>
  </item>


<item>
  <title>In Scala 3, use 4 Spaces for Indentation</title>
  <description>Scala’s coding style advised to use 2 spaces of indentation, but that was before Scala 3’s optional braces, which introduces significant indentation. It’s time for an upgrade of the coding style.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/11/08/in-scala-3-use-4-spaces-for-indentation/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-scala3-indentation-4-spaces.png?202510270536&quot; alt=&quot;&quot; width=&quot;1786&quot; height=&quot;1116&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala’s coding style advised to use 2 spaces of indentation, but that was before Scala 3’s optional braces, which introduces significant indentation. It’s time for an upgrade of the coding style.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/11/08/in-scala-3-use-4-spaces-for-indentation/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 08 Nov 2023 18:17:04 +0000</pubDate>
  <dc:modified>Sun, 19 Oct 2025 06:46:28 +0000</dc:modified>
  <atom:modified>Sun, 19 Oct 2025 06:46:28 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/11/08/in-scala-3-use-4-spaces-for-indentation/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/11/08/in-scala-3-use-4-spaces-for-indentation/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Programming</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>OOP classes vs Higher-order Functions (HOFs)</title>
  <description>What’s the difference?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/09/25/oop-classes-vs-higher-order-functions-hofs/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-oop-hof.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;996&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;What’s the difference?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/09/25/oop-classes-vs-higher-order-functions-hofs/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 25 Sep 2023 07:30:22 +0000</pubDate>
  <dc:modified>Mon, 25 Sep 2023 07:30:32 +0000</dc:modified>
  <atom:modified>Mon, 25 Sep 2023 07:30:32 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/09/25/oop-classes-vs-higher-order-functions-hofs/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/09/25/oop-classes-vs-higher-order-functions-hofs/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>OOP</category>
  <category>Scala</category>
  </item>


<item>
  <title>Post Once, Syndicate Everywhere (POSSE)</title>
  <description>I’m a geek, and a software developer. I want to be close to my peers, wherever they meet online. If this means reactivating former social media accounts, so be it. Therefore, I’m implementing POSSE, again 😕</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/09/21/post-once-syndicate-everywhere-pose/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/zuzi-1.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;This is my cat, Zuzi. She&apos;s completely black with green eyes. A rescued girl. My sweetheart.
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I’m a geek, and a software developer. I want to be close to my peers, wherever they meet online. If this means reactivating former social media accounts, so be it. Therefore, I’m implementing POSSE, again 😕&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/09/21/post-once-syndicate-everywhere-pose/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 21 Sep 2023 09:42:45 +0000</pubDate>
  <dc:modified>Sat, 18 May 2024 07:19:29 +0000</dc:modified>
  <atom:modified>Sat, 18 May 2024 07:19:29 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/09/21/post-once-syndicate-everywhere-pose/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/09/21/post-once-syndicate-everywhere-pose/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Opinion</category>
  <category>Personal</category>
  <category>Web</category>
  </item>


<item>
  <title>Java Volatiles</title>
  <description>In Java and other JVM languages, “volatile” reads and writes are part of the concurrency toolbox. But adding volatile on variables can be a mistake. This is a poorly understood concept. Let’s gain a better understanding.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/06/19/java-volatiles/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-java-volatiles.png?202510270536&quot; alt=&quot;&quot; width=&quot;2484&quot; height=&quot;1397&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;In Java and other JVM languages, “volatile” reads and writes are part of the concurrency toolbox. But adding &lt;code&gt;volatile&lt;/code&gt; on variables can be a mistake. This is a poorly understood concept. Let’s gain a better understanding.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/06/19/java-volatiles/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 19 Jun 2023 10:57:50 +0000</pubDate>
  <dc:modified>Tue, 20 Jun 2023 05:31:48 +0000</dc:modified>
  <atom:modified>Tue, 20 Jun 2023 05:31:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/06/19/java-volatiles/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/06/19/java-volatiles/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Programming</category>
  <category>Concurrency</category>
  <category>Java</category>
  <category>Scala</category>
  <category>JVM</category>
  </item>


<item>
  <title>Scala 3 Significant Indentation Woes: Sample</title>
  <description>Here’s a fairly straightforward Scala 3 sample, using significant indentation. Can you spot the compilation error?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/06/06/scala-3-significant-indentation-woes-sample/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-scala-indentation-woes.png?202510270536&quot; alt=&quot;&quot; width=&quot;1214&quot; height=&quot;396&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Here’s a fairly straightforward Scala 3 sample, using significant indentation. Can you spot the compilation error?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/06/06/scala-3-significant-indentation-woes-sample/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 06 Jun 2023 11:48:10 +0000</pubDate>
  <dc:modified>Sun, 26 Oct 2025 10:08:59 +0000</dc:modified>
  <atom:modified>Sun, 26 Oct 2025 10:08:59 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/06/06/scala-3-significant-indentation-woes-sample/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/06/06/scala-3-significant-indentation-woes-sample/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>Programming</category>
  <category>Programming Rant</category>
  <category>Python</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>Scala 3 Enums</title>
  <description>In Scala, how do we model enumerations of values? What are the possible issues? How does Scala compare with Java? What are the changes in Scala 3?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/05/25/scala-enums/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-scala-enums.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;In Scala, how do we model enumerations of values? What are the possible issues? How does Scala compare with Java? What are the changes in Scala 3?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/05/25/scala-enums/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 25 May 2023 11:15:29 +0000</pubDate>
  <dc:modified>Tue, 06 Jun 2023 12:19:54 +0000</dc:modified>
  <atom:modified>Tue, 06 Jun 2023 12:19:54 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/05/25/scala-enums/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/05/25/scala-enums/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Java</category>
  <category>Scala</category>
  <category>Scala 3</category>
  <category>Programming</category>
  </item>


<item>
  <title>Managing Database Migrations in Kotlin</title>
  <description>The database schema should be described as code, in your repository. And you should be able to semi-automatically update your database schema on new deployments. Now in Kotlin, with Gradle and Flyway.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/05/02/managing-database-migrations-kotlin/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-kotlin-db-migrations.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;The database schema should be described as code, in your repository. And you should be able to semi-automatically update your database schema on new deployments. Now in Kotlin, with Gradle and Flyway.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/05/02/managing-database-migrations-kotlin/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 02 May 2023 07:32:06 +0000</pubDate>
  <dc:modified>Thu, 25 May 2023 07:30:16 +0000</dc:modified>
  <atom:modified>Thu, 25 May 2023 07:30:16 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/05/02/managing-database-migrations-kotlin/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/05/02/managing-database-migrations-kotlin/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Kotlin</category>
  <category>SQL</category>
  </item>


<item>
  <title>Kotlin Coroutines to Cats-Effect</title>
  <description>Kotlin Coroutines are usually integrated in Java code via Java’s CompletableFuture, but a tighter integration might be possible with Cats-Effect.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/04/24/kotlin-suspended-functions-to-cats-effect-io/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-kotlin-to-ce-3.png?202510270536&quot; alt=&quot;&quot; width=&quot;2528&quot; height=&quot;1324&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Kotlin Coroutines are usually integrated in Java code via Java’s CompletableFuture, but a tighter integration might be possible with Cats-Effect.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/04/24/kotlin-suspended-functions-to-cats-effect-io/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2023/04/24/kotlin-suspended-functions-to-cats-effect-io/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/04/24/kotlin-suspended-functions-to-cats-effect-io/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Kotlin</category>
  <category>Programming</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Integrating Akka with Cats-Effect 3</title>
  <description>We are using a combination of Akka and Cats-Effect (ver. 3) for building payment processors. This post describes some solutions we’ve discovered.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/04/17/integrating-akka-with-cats-effect-3/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-akka-plus-cats-effect.png?202510270536&quot; alt=&quot;&quot; width=&quot;2376&quot; height=&quot;864&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;We are using a combination of Akka and Cats-Effect (ver. 3) for building payment processors. This post describes some solutions we’ve discovered.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/04/17/integrating-akka-with-cats-effect-3/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 17 Apr 2023 08:05:29 +0000</pubDate>
  <dc:modified>Thu, 25 May 2023 07:30:03 +0000</dc:modified>
  <atom:modified>Thu, 25 May 2023 07:30:03 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/04/17/integrating-akka-with-cats-effect-3/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/04/17/integrating-akka-with-cats-effect-3/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cats Effect</category>
  <category>FP</category>
  <category>Programming</category>
  <category>Scala</category>
  </item>


<item>
  <title>Server Monitoring with Monit</title>
  <description>I self-host my blog, other websites, Matomo, Mastodon, etc. I love self-hosting. But I need monitoring, to be alerted when things go wrong, as my setup is getting more and more complex. So, I recently asked for help online, being in need of a monitoring system for my VPS, as I need simple, common-sense health alerts. I got a recommendation for M/Monit, which seems to work well. This article shows my configuration.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/01/17/server-monitoring-with-monit/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-monit-panel.png?202510270536&quot; alt=&quot;&quot; width=&quot;1984&quot; height=&quot;928&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;A screenshot of my browser window, showing the 3 monitors that I configured in Monit, all green-lit, indicating that everything is fine.
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  I self-host my blog, other websites, Matomo, Mastodon, etc. I love self-hosting. But I need monitoring, to be alerted when things go wrong, as my setup is getting more and more complex. So, I recently asked for help online, being in need of a monitoring system for my VPS, as I need simple, common-sense health alerts. I got a recommendation for M/Monit, which seems to work well. This article shows my configuration.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/01/17/server-monitoring-with-monit/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 17 Jan 2023 11:16:12 +0000</pubDate>
  <dc:modified>Sun, 29 Sep 2024 09:22:06 +0000</dc:modified>
  <atom:modified>Sun, 29 Sep 2024 09:22:06 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/01/17/server-monitoring-with-monit/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/01/17/server-monitoring-with-monit/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Docker</category>
  <category>Self Hosting</category>
  <category>Shell</category>
  <category>Snippet</category>
  </item>


<item>
  <title>#DeleteTwitter</title>
  <description>Friday the 13th just passed 😳 and what a great day it was to finally leave Twitter. It’s been a fun ride, I found my programming community on it, I’ve learned a lot, but those days are over 😞</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/01/15/delete-twitter/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2023-passing-of-elves.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1258&quot; height=&quot;635&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Elves leaving Middle Earth&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Friday the 13th just passed 😳 and what a great day it was to finally leave Twitter. It’s been a fun ride, I found my programming community on it, I’ve learned a lot, but those days are over 😞&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2023/01/15/delete-twitter/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 15 Jan 2023 08:30:29 +0000</pubDate>
  <dc:modified>Mon, 25 Sep 2023 14:57:08 +0000</dc:modified>
  <atom:modified>Mon, 25 Sep 2023 14:57:08 +0000</atom:modified>
  <link>https://alexn.org/blog/2023/01/15/delete-twitter/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2023/01/15/delete-twitter/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  <category>Politics</category>
  </item>


<item>
  <title>Personal Server Backups</title>
  <description>Cloud hosting services like Linode or DigitalOcean offer backup services for your VPS. Save your money, you don’t need it. Here’s how to backup your data safely, and with no extra costs…</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/12/02/personal-server-backups/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-backup-vps.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
Cloud hosting services like Linode or DigitalOcean offer backup services for your VPS. Save your money, you don’t need it. Here’s how to backup your data safely, and with no extra costs…


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/12/02/personal-server-backups/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 02 Dec 2022 17:56:39 +0000</pubDate>
  <dc:modified>Sun, 29 Sep 2024 09:22:03 +0000</dc:modified>
  <atom:modified>Sun, 29 Sep 2024 09:22:03 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/12/02/personal-server-backups/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/12/02/personal-server-backups/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Self Hosting</category>
  <category>Server</category>
  <category>Shell</category>
  <category>Web</category>
  </item>


<item>
  <title>Custom Jackson JSON serializer/deserializer from Circe</title>
  <description>Snippet for when you’re using Circe and want to define custom Jackson serializers/deserializers from Circe’s codec definitions.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/11/29/custom-jackson-json-serializer-deserializer-from-circe/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-jackson-codecs.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;998&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
Snippet for when you’re using Circe and want to define custom Jackson serializers/deserializers from Circe’s codec definitions.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/11/29/custom-jackson-json-serializer-deserializer-from-circe/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2022/11/29/custom-jackson-json-serializer-deserializer-from-circe/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/11/29/custom-jackson-json-serializer-deserializer-from-circe/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>I ❤️ Scala&#39;s Community</title>
  <description>I find Scala’s community to be really nice, welcoming, warm, and productive. I am not talking just of the Typelevel sub-community, which is awesome, but of the whole Scala community. The whole thing.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/28/love-scala-community/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I find Scala’s community to be really nice, welcoming, warm, and productive. I am not talking just of the Typelevel sub-community, which is awesome, but of the whole Scala community. The whole thing.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/28/love-scala-community/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 28 Oct 2022 07:21:54 +0000</pubDate>
  <dc:modified>Fri, 28 Oct 2022 16:11:49 +0000</dc:modified>
  <atom:modified>Fri, 28 Oct 2022 16:11:49 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/28/love-scala-community/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/28/love-scala-community/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  </item>


<item>
  <title>Immutable Collections should be Your Default</title>
  <description>Mutable collection types should only be used strategically, with purpose, otherwise for correctness/safety purposes, the default should be immutable collection types, aka persistent data structures.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/27/immutable-collections-your-default/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-immutable-collections.png?202510270536&quot; alt=&quot;&quot; width=&quot;2376&quot; height=&quot;1485&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Mutable collection types should only be used strategically, with purpose, otherwise for correctness/safety purposes, the default should be immutable collection types, aka persistent data structures.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/27/immutable-collections-your-default/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 27 Oct 2022 12:34:46 +0000</pubDate>
  <dc:modified>Sun, 04 Dec 2022 22:02:50 +0000</dc:modified>
  <atom:modified>Sun, 04 Dec 2022 22:02:50 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/27/immutable-collections-your-default/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/27/immutable-collections-your-default/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Java</category>
  <category>Scala</category>
  </item>


<item>
  <title>On Scala 3&#39;s Optional Braces</title>
  <description>I dislike Scala 3’s significant whitespace syntax. At this point it’s safe to say that I hate it, being (IMO) an unfortunate evolution of the language.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/24/scala-3-optional-braces/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-scala3-optional-braces.png?202510270536&quot; alt=&quot;&quot; width=&quot;2856&quot; height=&quot;1884&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I dislike Scala 3’s significant whitespace syntax. At this point it’s safe to say that I hate it, being (IMO) an unfortunate evolution of the language.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/24/scala-3-optional-braces/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 24 Oct 2022 09:07:21 +0000</pubDate>
  <dc:modified>Tue, 06 Jun 2023 12:19:50 +0000</dc:modified>
  <atom:modified>Tue, 06 Jun 2023 12:19:50 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/24/scala-3-optional-braces/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/24/scala-3-optional-braces/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>Building a Queue for Delayed Messages via a RDBMS (1): Design</title>
  <description>Ever had the need to deliver messages on your queue at a certain timestamp in the future? Look no further, because your RDBMS can do it. This is part 1 of a series that builds a solution from scratch.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/21/modeling-queue-for-delayed-messages-via-rdbms/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-delayed-queue-design.png?202510270536&quot; alt=&quot;&quot; width=&quot;2484&quot; height=&quot;1244&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Ever had the need to deliver messages on your queue at a certain timestamp in the future? Look no further, because your RDBMS can do it. This is part 1 of a series that builds a solution from scratch.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/21/modeling-queue-for-delayed-messages-via-rdbms/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 21 Oct 2022 06:46:07 +0000</pubDate>
  <dc:modified>Mon, 24 Oct 2022 06:00:29 +0000</dc:modified>
  <atom:modified>Mon, 24 Oct 2022 06:00:29 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/21/modeling-queue-for-delayed-messages-via-rdbms/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/21/modeling-queue-for-delayed-messages-via-rdbms/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>SQL</category>
  </item>


<item>
  <title>Cut the Technobabble</title>
  <description>The marketing for Functional Programming is made of technobabble. Technobabble was used in Star Trek. Those long discussions are what Star Trek was loved for, but technobabble isn’t good for sharing knowledge or advancing our field.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/19/cut-the-technobabble/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-cut-the-technobabble.jpeg?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;&quot;Sir, we have a bug!&quot;; &quot;But we used algebraic reasoning!&quot;&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;The marketing for Functional Programming is made of technobabble. Technobabble was used in Star Trek. Those long discussions are what Star Trek was loved for, but technobabble isn’t good for sharing knowledge or advancing our field.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/19/cut-the-technobabble/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 19 Oct 2022 12:00:00 +0000</pubDate>
  <dc:modified>Fri, 21 Oct 2022 06:10:26 +0000</dc:modified>
  <atom:modified>Fri, 21 Oct 2022 06:10:26 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/19/cut-the-technobabble/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/19/cut-the-technobabble/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Kotlin</category>
  <category>Scala</category>
  </item>


<item>
  <title>The case against Effect Systems (e.g., the IO data type)</title>
  <description>As Scala developers and fans of the functional programming promoted by Haskell, how do we justify the use of IO to newbies coming from Java? It’s been a fun ride, but the truth is that Java 19 is changing everything.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/13/the-case-against-effect-systems-io-data-type/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-effect-systems.png?202510270536&quot; alt=&quot;&quot; width=&quot;2428&quot; height=&quot;1652&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;As Scala developers and fans of the functional programming promoted by Haskell, how do we justify the use of &lt;code&gt;IO&lt;/code&gt; to newbies coming from Java? It’s been a fun ride, but the truth is that Java 19 is changing everything.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/13/the-case-against-effect-systems-io-data-type/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 13 Oct 2022 09:00:00 +0000</pubDate>
  <dc:modified>Tue, 18 Oct 2022 17:02:09 +0000</dc:modified>
  <atom:modified>Tue, 18 Oct 2022 17:02:09 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/13/the-case-against-effect-systems-io-data-type/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/13/the-case-against-effect-systems-io-data-type/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>FSharp</category>
  <category>Java</category>
  <category>Kotlin</category>
  <category>Scala</category>
  </item>


<item>
  <title>Execute Shell Commands in Java/Scala/Kotlin</title>
  <description>The following describes snippets for executing shell commands, in Java, Scala, and Kotlin, using standard functionality. It’s also useful to compare Java vs Scala vs Kotlin for this particular problem.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/03/execute-shell-commands-in-java-scala-kotlin/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-exec-shell-command.png?202510270536&quot; alt=&quot;&quot; width=&quot;2024&quot; height=&quot;1012&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;The following describes snippets for executing shell commands, in Java, Scala, and Kotlin, using standard functionality. It’s also useful to compare Java vs Scala vs Kotlin for this particular problem.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/10/03/execute-shell-commands-in-java-scala-kotlin/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 03 Oct 2022 05:13:13 +0000</pubDate>
  <dc:modified>Wed, 05 Oct 2022 15:34:13 +0000</dc:modified>
  <atom:modified>Wed, 05 Oct 2022 15:34:13 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/10/03/execute-shell-commands-in-java-scala-kotlin/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/10/03/execute-shell-commands-in-java-scala-kotlin/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Snippet</category>
  <category>Java</category>
  <category>Scala</category>
  <category>Kotlin</category>
  </item>


<item>
  <title>The Trouble with Checked Exceptions: Part 2</title>
  <description>Java’s Checked Exceptions are problematic, and it’s not only due to their ergonomics. The bigger problem is that they are in conflict with abstraction and OOP. Also, few people care about typed exceptions (unless they are happy path results, not errors).</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/28/the-trouble-with-checked-exceptions-part-2/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-checked-exceptions.png?202510270536&quot; alt=&quot;&quot; width=&quot;2152&quot; height=&quot;1268&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Java’s Checked Exceptions are problematic, and it’s not only due to their ergonomics. The bigger problem is that they are in conflict with abstraction and OOP. Also, few people care about typed exceptions (unless they are happy path results, not errors).&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/28/the-trouble-with-checked-exceptions-part-2/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 28 Sep 2022 22:41:48 +0000</pubDate>
  <dc:modified>Thu, 29 Sep 2022 05:32:44 +0000</dc:modified>
  <atom:modified>Thu, 29 Sep 2022 05:32:44 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/28/the-trouble-with-checked-exceptions-part-2/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/28/the-trouble-with-checked-exceptions-part-2/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Java</category>
  <category>Scala</category>
  </item>


<item>
  <title>Proprietary Environments are a Trap</title>
  <description>What to learn in order to not become obsolete as a software developer, and then being forced into early retirement from programming? What platforms to prefer for building products that last with minimal maintenance?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/22/proprietary-environments-are-a-trap/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-me-and-my-son-on-laptops.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Me, with my son, learning the Lua programming language on proprietary macOS laptops.&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;What to learn in order to not become obsolete as a software developer, and then being forced into early retirement from programming? What platforms to prefer for building products that last with minimal maintenance?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/22/proprietary-environments-are-a-trap/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 22 Sep 2022 07:00:00 +0000</pubDate>
  <dc:modified>Fri, 06 Sep 2024 06:33:48 +0000</dc:modified>
  <atom:modified>Fri, 06 Sep 2024 06:33:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/22/proprietary-environments-are-a-trap/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/22/proprietary-environments-are-a-trap/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Open Source</category>
  <category>Proprietary</category>
  </item>


<item>
  <title>Java 19</title>
  <description>Java 19 is now released, and it’s a big deal, as it ships with Virtual Threads (JEP 425), among other goodies, like structured concurrency (JEP 428), or improvements to pattern matching (JEPs 405, 427). I haven’t been as excited about a Java release in a long time.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/21/java-19/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/java-duke.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;901&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Honestly, Java&apos;s mascot is pretty cool, Scala needs a mascot too.&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Java 19 is now released, and it’s a big deal, as it ships with Virtual Threads (JEP 425), among other goodies, like structured concurrency (JEP 428), or improvements to pattern matching (JEPs 405, 427). I haven’t been as excited about a Java release in a long time.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/21/java-19/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 21 Sep 2022 16:00:00 +0000</pubDate>
  <dc:modified>Sat, 18 May 2024 07:19:26 +0000</dc:modified>
  <atom:modified>Sat, 18 May 2024 07:19:26 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/21/java-19/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/21/java-19/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Java</category>
  <category>Scala</category>
  </item>


<item>
  <title>Akka Fork FUD</title>
  <description>Lightbend made Akka proprietary from version 2.7.x onward. This left the community wondering about the possibility of a fork, and unfortunately, I see some FUD that needs to be addressed.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/21/akka-fork-fud/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/akka-logo.png?202510270536&quot; alt=&quot;&quot; width=&quot;2560&quot; height=&quot;1052&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Lightbend made Akka proprietary from version 2.7.x onward. This left the community wondering about the possibility of a fork, and unfortunately, I see some FUD that needs to be addressed.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/21/akka-fork-fud/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 21 Sep 2022 09:00:00 +0000</pubDate>
  <dc:modified>Wed, 21 Sep 2022 20:22:54 +0000</dc:modified>
  <atom:modified>Wed, 21 Sep 2022 20:22:54 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/21/akka-fork-fud/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/21/akka-fork-fud/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Open Source</category>
  <category>Scala</category>
  </item>


<item>
  <title>Java&#39;s Cultural Problem</title>
  <description>Java is good by modern standards, from a technical perspective, the platform having received a lot of improvements from Java 8 to 17. Unfortunately, it still stinks, and the problem is its “enterprise” culture.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/19/java-cultural-problem/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/java-logo.png?202510270536&quot; alt=&quot;&quot; width=&quot;1800&quot; height=&quot;1013&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Java is good by modern standards, from a technical perspective, the platform having received a lot of improvements from Java 8 to 17. Unfortunately, it still stinks, and the problem is its “enterprise” culture.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/19/java-cultural-problem/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 19 Sep 2022 09:00:00 +0000</pubDate>
  <dc:modified>Wed, 21 Sep 2022 20:22:39 +0000</dc:modified>
  <atom:modified>Wed, 21 Sep 2022 20:22:39 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/19/java-cultural-problem/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/19/java-cultural-problem/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Java</category>
  <category>JVM</category>
  <category>Languages</category>
  <category>Programming Rant</category>
  </item>


<item>
  <title>Scripting with Scala</title>
  <description>Unix has a long tradition with scripting — small programs represented as text files that can be inspected, modified, and executed. Scala can be used for scripting too.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/13/scripting-with-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-09-scala-cli.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;900&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Unix has a long tradition with scripting — small programs represented as text files that can be inspected, modified, and executed. Scala can be used for scripting too.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/13/scripting-with-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 13 Sep 2022 09:00:00 +0000</pubDate>
  <dc:modified>Wed, 10 Jan 2024 11:29:19 +0000</dc:modified>
  <atom:modified>Wed, 10 Jan 2024 11:29:19 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/13/scripting-with-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/13/scripting-with-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>CLI</category>
  <category>Scala</category>
  <category>Shell</category>
  <category>Snippet</category>
  </item>


<item>
  <title>#DeleteFacebook</title>
  <description>I finally managed to delete my Facebook account. This was a long time coming. Being disconnected feels good, it feels liberating.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/12/delete-facebook/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/slot-machines.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1100&quot; height=&quot;768&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Slot machines in a Las Vegas casino.&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I finally managed to delete my Facebook account. This was a long time coming. Being disconnected feels good, it feels liberating.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/12/delete-facebook/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 12 Sep 2022 09:00:00 +0000</pubDate>
  <dc:modified>Sat, 18 May 2024 07:19:22 +0000</dc:modified>
  <atom:modified>Sat, 18 May 2024 07:19:22 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/12/delete-facebook/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/12/delete-facebook/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  </item>


<item>
  <title>Scala isn&#39;t fun anymore</title>
  <description>I’ve just spent over a day, going to sleep at 1:00 am, to upgrade dependencies and fix eviction warnings in the build of a Scala project.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/09/scala-isnt-fun-anymore/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I’ve just spent over a day, going to sleep at 1:00 am, to upgrade dependencies and fix eviction warnings in the build of a Scala project.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/09/scala-isnt-fun-anymore/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 09 Sep 2022 05:00:37 +0000</pubDate>
  <dc:modified>Mon, 19 Sep 2022 16:15:53 +0000</dc:modified>
  <atom:modified>Mon, 19 Sep 2022 16:15:53 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/09/scala-isnt-fun-anymore/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/09/scala-isnt-fun-anymore/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>Personal</category>
  <category>Politics</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  </item>


<item>
  <title>Akka is moving away from Open Source</title>
  <description>According to today’s announcement, Lightbend is changing Akka’s licensing to “Business Source License (BSL)”. This is not an Open Source, or a Free Software license. This is a proprietary license.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/07/akka-is-moving-away-from-open-source/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/akka-logo.png?202510270536&quot; alt=&quot;&quot; width=&quot;2560&quot; height=&quot;1052&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;According to today’s announcement, Lightbend is changing Akka’s licensing to “Business Source License (BSL)”. This is not an Open Source, or a Free Software license. This is a proprietary license.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/07/akka-is-moving-away-from-open-source/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 07 Sep 2022 16:31:21 +0000</pubDate>
  <dc:modified>Mon, 19 Sep 2022 16:15:46 +0000</dc:modified>
  <atom:modified>Mon, 19 Sep 2022 16:15:46 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/07/akka-is-moving-away-from-open-source/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/07/akka-is-moving-away-from-open-source/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Open Source</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  </item>


<item>
  <title>Open Source vs Free Software</title>
  <description>You may think that Open Source is about having “access to source code”, whereas Free Software is about freedom. Kids, gather around, let me tell you why that’s wrong.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/07/free-software-vs-open-source/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/open-source.png?202510270536&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;You may think that Open Source is about having “access to source code”, whereas Free Software is about freedom. Kids, gather around, let me tell you why that’s wrong.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/07/free-software-vs-open-source/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 07 Sep 2022 16:28:56 +0000</pubDate>
  <dc:modified>Thu, 08 Sep 2022 06:12:50 +0000</dc:modified>
  <atom:modified>Thu, 08 Sep 2022 06:12:50 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/07/free-software-vs-open-source/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/07/free-software-vs-open-source/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Politics</category>
  <category>Open Source</category>
  </item>


<item>
  <title>Limiting Toxic Technology</title>
  <description>Toxic usage patterns of technology, begone — inspired by a self-help book 🤷‍♂️ I changed my philosophy and habits regarding the use of technology.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/06/limiting-toxic-technology/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-apuseni-mountains.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;788&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Apuseni Moutains, Romania, near the Scărișoara Ice Cave&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Toxic usage patterns of technology, begone — inspired by a self-help book 🤷‍♂️ I changed my philosophy and habits regarding the use of technology.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/09/06/limiting-toxic-technology/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 06 Sep 2022 18:33:27 +0000</dc:modified>
  <atom:modified>Tue, 06 Sep 2022 18:33:27 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/09/06/limiting-toxic-technology/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/09/06/limiting-toxic-technology/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  <category>Opinion</category>
  </item>


<item>
  <title>Tracking Side Effects in Scala</title>
  <description>What if we’d use Scala’s type system for tracking side-effects in impure code, too? In the Scala/FP community we use and love effect systems, such as Cats Effect, with its IO data type. “Suspending side-effects” in IO is great, but in Scala it’s either IO or forgoing any kind of type-safety for side-effects, and that’s bad.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/05/23/tracking-effects-in-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala3-unsafe-io.png?202510270536&quot; alt=&quot;&quot; width=&quot;1500&quot; height=&quot;937&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;What if we’d use Scala’s type system for tracking side-effects in impure code, too? In the Scala/FP community we use and love effect systems, such as Cats Effect, with its IO data type. “Suspending side-effects” in IO is great, but in Scala it’s either &lt;code&gt;IO&lt;/code&gt; or forgoing any kind of type-safety for side-effects, and that’s bad.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/05/23/tracking-effects-in-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2022/05/23/tracking-effects-in-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/05/23/tracking-effects-in-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Monix</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>OOP vs Type Classes, Part 1: Ideology</title>
  <description>This is the 1st article of a series that explores the difference between OOP design, and parametric polymorphism with Type Classes, as both are possible in Scala.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/05/13/oop-vs-type-classes-part-1-ideology/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-oop-vs-type-classes-ideology.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1500&quot; height=&quot;938&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;Jacques-Louis David, The Intervention of the Sabine Women, 1799. Oil on canvas. Paris, musée du Louvre.
&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;This is the 1st article of a series that explores the difference between OOP design, and parametric polymorphism with Type Classes, as both are possible in Scala.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/05/13/oop-vs-type-classes-part-1-ideology/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2022/05/13/oop-vs-type-classes-part-1-ideology/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/05/13/oop-vs-type-classes-part-1-ideology/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>OOP</category>
  <category>FP</category>
  <category>Scala</category>
  </item>


<item>
  <title>Implicit vs Scala 3&#39;s Given</title>
  <description>I don’t like given, as an alternative to implicit in Scala 3. The more I try working with it, the more it annoys me; and my understanding may be superficial, but I don’t like this direction. Here’s a comparisson between given and implicit, that I hope is fair…</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/05/11/implicit-vs-scala-3-given/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-3-given.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;790&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I don’t like &lt;code&gt;given&lt;/code&gt;, as an alternative to &lt;code&gt;implicit&lt;/code&gt; in Scala 3. The more I try working with it, the more it annoys me; and my understanding may be superficial, but I don’t like this direction. Here’s a comparisson between &lt;code&gt;given&lt;/code&gt; and &lt;code&gt;implicit&lt;/code&gt;, that I hope is fair…&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/05/11/implicit-vs-scala-3-given/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2022/05/11/implicit-vs-scala-3-given/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/05/11/implicit-vs-scala-3-given/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Programming Rant</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>Scala OOFP Design Sample</title>
  <description>Scala is considered a multi-paradigm language, for better or worse, being one of the best OOP languages, which is why it’s so versatile. Let’s do a design exercise, going from OOP to static FP, and back. Let’s understand the various techniques promoted in the community, and understand why the OOP design isn’t just “idiomatic” for Scala, but can be superior to alternatives.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/18/scala-oop-design-sample/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-04-oofp.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;787&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala is considered a multi-paradigm language, for better or worse, being one of the best OOP languages, which is why it’s so versatile. Let’s do a design exercise, going from OOP to static FP, and back. Let’s understand the various techniques promoted in the community, and understand why the OOP design isn’t just “idiomatic” for Scala, but can be superior to alternatives.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/18/scala-oop-design-sample/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 06 Jun 2023 12:19:40 +0000</dc:modified>
  <atom:modified>Tue, 06 Jun 2023 12:19:40 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/04/18/scala-oop-design-sample/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/04/18/scala-oop-design-sample/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>OOP</category>
  <category>Scala</category>
  <category>Scala 3</category>
  </item>


<item>
  <title>Scala&#39;s Gitter to Discord migration mistake</title>
  <description>The Scala community is increasingly using Discord for “real-time chat”. This was announced in December, and the community page lists several Discord “servers”, one of them belonging to Typelevel. I think this move from Gitter to Discord is probably a mistake.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/09/scala-gitter-discord-mistake/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;The Scala community is increasingly using Discord for “real-time chat”. This was announced in December, and the community page lists several Discord “servers”, one of them belonging to Typelevel. I think this move from Gitter to Discord is probably a mistake.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/09/scala-gitter-discord-mistake/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2022/04/09/scala-gitter-discord-mistake/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/04/09/scala-gitter-discord-mistake/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Open Source</category>
  <category>Opinion</category>
  <category>Scala</category>
  </item>


<item>
  <title>On Typelevel and Monix</title>
  <description>Planning the future is difficult, but can bring clarity and purpose. I’m stepping down from the Typelevel Steering Committee. I also have plans for Monix’s future.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/05/future-monix-typelevel/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2022-04-monix.png?202510270536&quot; alt=&quot;&quot; width=&quot;1052&quot; height=&quot;587&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Planning the future is difficult, but can bring clarity and purpose. I’m stepping down from the Typelevel Steering Committee. I also have plans for Monix’s future.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/05/future-monix-typelevel/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 05 Apr 2022 21:16:52 +0000</dc:modified>
  <atom:modified>Tue, 05 Apr 2022 21:16:52 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/04/05/future-monix-typelevel/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/04/05/future-monix-typelevel/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Monix</category>
  <category>Personal</category>
  <category>Typelevel</category>
  </item>


<item>
  <title>A Return to Blogging</title>
  <description>I like writing about my personal projects and about programming in general. Helping others learn programming seems to be my calling. I rarely write on this blog, however, but I’m trying to change that. You should have a blog too.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/01/blogging/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/writing.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1300&quot; height=&quot;746&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I like writing about my personal projects and about programming in general. Helping others learn programming seems to be my calling. I rarely write on this blog, however, but I’m trying to change that. You should have a blog too.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/04/01/blogging/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 09 Apr 2022 08:25:41 +0000</dc:modified>
  <atom:modified>Sat, 09 Apr 2022 08:25:41 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/04/01/blogging/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/04/01/blogging/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Opinion</category>
  <category>Personal</category>
  </item>


<item>
  <title>Finding Focus in Harsh Times</title>
  <description>Since 2020 world events have obliterated my ability to focus, and anxiety has gone through the roof. This is a personal reflection and a plan for recovery.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/03/30/focus/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/magnolia-v2.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;788&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Since 2020 world events have obliterated my ability to focus, and anxiety has gone through the roof. This is a personal reflection and a plan for recovery.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/03/30/focus/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 30 Mar 2022 14:08:01 +0000</pubDate>
  <dc:modified>Sat, 18 May 2024 07:19:18 +0000</dc:modified>
  <atom:modified>Sat, 18 May 2024 07:19:18 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/03/30/focus/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2022/03/30/focus/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  </item>


<item>
  <title>Cleanup Scala/Java project</title>
  <description>Snippet for cleaning up a Scala project’s directory of all compiled files.</description>
  <content:encoded>&lt;p&gt;Snippet for cleaning up a Scala project’s directory of all compiled files.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2022/01/22/cleanup-scala-project/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 17 Jan 2023 11:17:48 +0000</dc:modified>
  <atom:modified>Tue, 17 Jan 2023 11:17:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2022/01/22/cleanup-scala-project/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2022/01/22/cleanup-scala-project/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>CLI</category>
  <category>Scala</category>
  <category>Shell</category>
  </item>


<item>
  <title>VSCode workplace recommended extensions</title>
  <description>You can recommend the required VSCode extensions per repository to your fellow programmers. This is what VSCode calls “workspace recommended extensions”.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/08/29/vscode-recommended-extensions-vscode-extensions-json/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/recommended-extensions.png?202510270536&quot; alt=&quot;&quot; width=&quot;1318&quot; height=&quot;740&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      You can recommend the required VSCode extensions per repository to your fellow programmers. This is what VSCode calls “workspace recommended extensions”.

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/08/29/vscode-recommended-extensions-vscode-extensions-json/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 19 Sep 2022 16:11:59 +0000</dc:modified>
  <atom:modified>Mon, 19 Sep 2022 16:11:59 +0000</atom:modified>
  <link>https://alexn.org/blog/2021/08/29/vscode-recommended-extensions-vscode-extensions-json/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2021/08/29/vscode-recommended-extensions-vscode-extensions-json/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Unsafe Lazy Resource.scala</title>
  <description>Snippet for an impure way (no IO) to create a resource that can later be closed.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/08/02/unsafelazyresource-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/unsafe-lazy-resource.png?202510270536&quot; alt=&quot;&quot; width=&quot;1664&quot; height=&quot;1124&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Snippet for an impure way (no IO) to create a resource that can later be closed.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/08/02/unsafelazyresource-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 18 May 2024 07:19:17 +0000</dc:modified>
  <atom:modified>Sat, 18 May 2024 07:19:17 +0000</atom:modified>
  <link>https://alexn.org/blog/2021/08/02/unsafelazyresource-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2021/08/02/unsafelazyresource-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Combining the terminal (iTerm) with the IDE</title>
  <description>⌘+Click on a file path triggers my terminal to open that file inside my IDE, and that helps a lot.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/07/18/iterm-open-file-cmd-click-ide-semantic-history/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/iterm-semantic-history-demo.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;&lt;code&gt;⌘+Click&lt;/code&gt; on a file path triggers my terminal to open that file inside my IDE, and that helps a lot.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/07/18/iterm-open-file-cmd-click-ide-semantic-history/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 18 Jul 2021 12:23:50 +0000</pubDate>
  <link>https://alexn.org/blog/2021/07/18/iterm-open-file-cmd-click-ide-semantic-history/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/07/18/iterm-open-file-cmd-click-ide-semantic-history/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>macOS</category>
  <category>Scala</category>
  </item>


<item>
  <title>Tolerance</title>
  <description>I just refactored a piece of code. I deleted 6 source code files, and rebuilt the functionality with a bunch of dirty OOP classes shoved in a single file 😱</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/03/30/tolerance/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/tolerance.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  I just refactored a piece of code. I deleted 6 source code files, and rebuilt the functionality with a bunch of dirty OOP classes shoved in a single file 😱


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/03/30/tolerance/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 30 Mar 2021 20:12:35 +0000</pubDate>
  <link>https://alexn.org/blog/2021/03/30/tolerance/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/03/30/tolerance/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>OOP</category>
  <category>Personal</category>
  <category>Programming Rant</category>
  </item>


<item>
  <title>Atom/RSS Feeds are the Best Way to Consume the Web</title>
  <description>I stay connected to websites I care about via an RSS/Atom feed reader. It’s better than social media for finding out what’s new because it’s clutter-free. By following RSS/Atom feeds, I discover wonderful gems that otherwise would be lost in the noise.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/03/29/atom-rss-feeds-are-the-best-way-to-consume-the-web/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/highway.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;935&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I stay connected to websites I care about via an RSS/Atom feed reader. It’s better than social media for finding out what’s new because it’s clutter-free. By following RSS/Atom feeds, I discover wonderful gems that otherwise would be lost in the noise.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/03/29/atom-rss-feeds-are-the-best-way-to-consume-the-web/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 29 Mar 2021 19:58:29 +0000</pubDate>
  <link>https://alexn.org/blog/2021/03/29/atom-rss-feeds-are-the-best-way-to-consume-the-web/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/03/29/atom-rss-feeds-are-the-best-way-to-consume-the-web/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Jekyll</category>
  <category>Web</category>
  </item>


<item>
  <title>ING Scala Meetup on Scala 3 (live coding session)</title>
  <description>Online meetup on Scala 3’s newly introduced types and features for encoding type classes.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/26/type-classes-in-scala-3-live-coding-session/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/ing-meetup-working-with-dotty-1.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1800&quot; height=&quot;1046&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Online meetup on Scala 3’s newly introduced types and features for encoding type classes.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/26/type-classes-in-scala-3-live-coding-session/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 26 Feb 2021 06:30:07 +0000</pubDate>
  <link>https://alexn.org/blog/2021/02/26/type-classes-in-scala-3-live-coding-session/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/02/26/type-classes-in-scala-3-live-coding-session/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Scala 3</category>
  <category>Video</category>
  </item>


<item>
  <title>Implementing a CountDownLatch (async and dirty)</title>
  <description>Yo dawg, I heard you liked concurrency primitives. Let’s implement our own asynchronous, dirty CountDownLatch.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/22/countdownlatch-async-dirty/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/countdownlatch-async-dirty.png?202510270536&quot; alt=&quot;&quot; width=&quot;1800&quot; height=&quot;900&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Yo dawg, I heard you liked concurrency primitives. Let’s implement our own asynchronous, dirty CountDownLatch.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/22/countdownlatch-async-dirty/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 22 Feb 2021 13:39:35 +0000</pubDate>
  <link>https://alexn.org/blog/2021/02/22/countdownlatch-async-dirty/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/02/22/countdownlatch-async-dirty/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Concurrency</category>
  <category>JVM</category>
  <category>Multithreading</category>
  <category>Scala</category>
  <category>Video</category>
  </item>


<item>
  <title>Matomo (Analytics) Hosting via Docker</title>
  <description>Docker setup for self-hosting Matomo, an open-source alternative to Google Analytics.</description>
  <content:encoded>&lt;p&gt;Docker setup for self-hosting Matomo, an open-source alternative to Google Analytics.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/22/matomo-hosting-via-docker/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
  <dc:modified>Sun, 29 Sep 2024 09:21:59 +0000</dc:modified>
  <atom:modified>Sun, 29 Sep 2024 09:21:59 +0000</atom:modified>
  <link>https://alexn.org/blog/2021/02/22/matomo-hosting-via-docker/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2021/02/22/matomo-hosting-via-docker/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Self Hosting</category>
  <category>Web</category>
  </item>


<item>
  <title>Scala&#39;s List has a Secret</title>
  <description>OOP couples the data with the methods operating on it, and this is considered bad in FP circles. But is it?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/12/scala-list-secret/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-list.png?202510270536&quot; alt=&quot;&quot; width=&quot;1852&quot; height=&quot;880&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;OOP couples the data with the methods operating on it, and this is considered bad in FP circles. But is it?&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/02/12/scala-list-secret/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 12 Feb 2021 11:32:33 +0000</pubDate>
  <link>https://alexn.org/blog/2021/02/12/scala-list-secret/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/02/12/scala-list-secret/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Multithreading</category>
  <category>Scala</category>
  </item>


<item>
  <title>Tail Recursive Functions (in Scala)</title>
  <description>Turning imperative algorithms to tail-recursive functions isn’t necessarily obvious. In this article (and video) I’m showing you the trick you need, and in doing so, we’ll discover the Zen of Functional Programming.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/01/26/tail-recursive-functions-in-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/tail-recursive-functions.png?202510270536&quot; alt=&quot;&quot; width=&quot;1596&quot; height=&quot;819&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Turning imperative algorithms to tail-recursive functions isn’t necessarily obvious. In this article (and video) I’m showing you the trick you need, and in doing so, we’ll discover the Zen of Functional Programming.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/01/26/tail-recursive-functions-in-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 26 Jan 2021 19:49:35 +0000</pubDate>
  <link>https://alexn.org/blog/2021/01/26/tail-recursive-functions-in-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2021/01/26/tail-recursive-functions-in-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Algorithms</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Video</category>
  </item>


<item>
  <title>Snippet: Tagless Final vs OOP</title>
  <description>Snippet of code discussing Tagless Final vs OOP-style dependency injection.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/01/20/tagless-final-vs-oop/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/tagless-final-vs-oop.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Snippet of code discussing Tagless Final vs OOP-style dependency injection.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/01/20/tagless-final-vs-oop/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 12:55:01 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 12:55:01 +0000</atom:modified>
  <link>https://alexn.org/blog/2021/01/20/tagless-final-vs-oop/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2021/01/20/tagless-final-vs-oop/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>OOP</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Snippet: Remove blank lines from text</title>
  <description>Just a regular expression.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/01/14/remove-blank-lines/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/remove-blank-lines.png?202510270536&quot; alt=&quot;&quot; width=&quot;1684&quot; height=&quot;842&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Just a regular expression.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2021/01/14/remove-blank-lines/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 19 Sep 2022 16:11:17 +0000</dc:modified>
  <atom:modified>Mon, 19 Sep 2022 16:11:17 +0000</atom:modified>
  <link>https://alexn.org/blog/2021/01/14/remove-blank-lines/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2021/01/14/remove-blank-lines/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Java</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Execute shell commands in F#</title>
  <description>Snippet in plain F# with no dependencies. Features a neat shebang.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/12/06/execute-shell-command-in-fsharp/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/execute-shell-command-fsharp.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;787&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Snippet in plain F# with no dependencies. Features a neat shebang.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/12/06/execute-shell-command-in-fsharp/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
  <dc:modified>Sun, 05 Nov 2023 17:26:44 +0000</dc:modified>
  <atom:modified>Sun, 05 Nov 2023 17:26:44 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/12/06/execute-shell-command-in-fsharp/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/12/06/execute-shell-command-in-fsharp/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Shell</category>
  <category>dotNet</category>
  <category>FSharp</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Using ScalaTest for Effects</title>
  <description>Helpers for integrating with cats.effect.IO.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/22/effecttestsuite-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/test-effect-suite.png?202510270536&quot; alt=&quot;&quot; width=&quot;1124&quot; height=&quot;568&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Helpers for integrating with &lt;code&gt;cats.effect.IO&lt;/code&gt;.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/22/effecttestsuite-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 19 Sep 2022 16:11:13 +0000</dc:modified>
  <atom:modified>Mon, 19 Sep 2022 16:11:13 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/11/22/effecttestsuite-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/11/22/effecttestsuite-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cats Effect</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Best practice for natural Ordering</title>
  <description>Definitions of scala.math.Ordering MUST BE consistent with equals, an often overlooked law that can lead to problems.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/ordering.png?202510270536&quot; alt=&quot;&quot; width=&quot;1608&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Definitions of &lt;code&gt;scala.math.Ordering&lt;/code&gt; MUST BE consistent with &lt;code&gt;equals&lt;/code&gt;, an often overlooked law that can lead to problems.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 17 Nov 2020 09:02:13 +0000</pubDate>
  <link>https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Practices</category>
  <category>Scala</category>
  </item>


<item>
  <title>Managing Database Migrations in Scala</title>
  <description>The database schema should be described as code, in your repository. And you should be able to semi-automatically update your database schema on new deployments.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/15/managing-database-migrations-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/db-migrations-scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;The database schema should be described as code, in your repository. And you should be able to semi-automatically update your database schema on new deployments.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/15/managing-database-migrations-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 15 Nov 2020 16:17:25 +0000</pubDate>
  <link>https://alexn.org/blog/2020/11/15/managing-database-migrations-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/15/managing-database-migrations-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>SQL</category>
  <category>Typelevel</category>
  </item>


<item>
  <title>List static blog tags in folder (Jekyll, etc)</title>
  <description>Script for listing the used tags of a Jekyll directory of articles.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/13/list-blog-tags-in-folder/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/script-list-tags.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Script for listing the used tags of a Jekyll directory of articles.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/13/list-blog-tags-in-folder/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:24:12 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:24:12 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/11/13/list-blog-tags-in-folder/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/11/13/list-blog-tags-in-folder/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Jekyll</category>
  <category>Ruby</category>
  <category>Snippet</category>
  </item>


<item>
  <title>I like Option.get</title>
  <description>We should strive to make illegal states unrepresentable. Option.get is a partial function that, according to many, shouldn’t be in the standard library. Yet it doesn’t bother me; the inability of Scala to make it safe is the problem.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/12/i-like-option-get/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/option.get.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;We should strive to make illegal states unrepresentable. &lt;code&gt;Option.get&lt;/code&gt; is a partial function that, according to many, shouldn’t be in the standard library. Yet it doesn’t bother me; the inability of Scala to make it safe is the problem.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/12/i-like-option-get/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 12 Nov 2020 18:02:46 +0000</pubDate>
  <link>https://alexn.org/blog/2020/11/12/i-like-option-get/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/12/i-like-option-get/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>TypeScript</category>
  </item>


<item>
  <title>Organize and Index Your Screenshots (OCR) on macOS</title>
  <description>Screenshots contain text, text that should be searchable, as finding a screenshot later is the whole point of creating it.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/spotlight-search.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Screenshots contain text, text that should be searchable, as finding a screenshot later is the whole point of creating it.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 11 Nov 2020 12:43:46 +0000</pubDate>
  <link>https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cloud</category>
  <category>macOS</category>
  <category>Ruby</category>
  </item>


<item>
  <title>Block comments on the web</title>
  <description>Comments on the web can be toxic, and a waste of time. Here’s how to block them…</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/20/block-comments-on-the-web/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/block-comments.png?202510270536&quot; alt=&quot;&quot; width=&quot;1526&quot; height=&quot;763&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Comments on the web can be toxic, and a waste of time. Here’s how to block them…&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/20/block-comments-on-the-web/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 20 Oct 2020 19:51:45 +0000</pubDate>
  <link>https://alexn.org/blog/2020/10/20/block-comments-on-the-web/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/10/20/block-comments-on-the-web/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Browser</category>
  <category>Web</category>
  </item>


<item>
  <title>Generic IOApp alternative</title>
  <description>IOApp alternative, for Cats Effect v2, that can work with any effect type.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/15/generic-ioapp-alternative/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/links/pureapp.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;&lt;code&gt;IOApp&lt;/code&gt; alternative, for Cats Effect v2, that can work with any effect type.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/15/generic-ioapp-alternative/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:31:09 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:31:09 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/10/15/generic-ioapp-alternative/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/10/15/generic-ioapp-alternative/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cats Effect</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Effect Runtime</title>
  <description>Defining a “runtime” for Cats-Effect v2 that provides the underlying environment necessary (i.e. ContextShift, Timer, Clock).</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/12/effect-runtime/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/effect-runtime.png?202510270536&quot; alt=&quot;&quot; width=&quot;1300&quot; height=&quot;650&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Defining a “runtime” for Cats-Effect v2 that provides the underlying environment necessary (i.e. &lt;code&gt;ContextShift&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;Clock&lt;/code&gt;).&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/12/effect-runtime/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:30:23 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:30:23 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/10/12/effect-runtime/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/10/12/effect-runtime/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cats Effect</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>When My World Vanishes</title>
  <description>It’s me, facing a hard to solve problem. It’s a difficult one, and I’m having problems focusing. I make some coffee, I move to another room, and I’m already thinking of running to some coffee shop, forgetting that we’re still in a pandemic.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/10/when-my-world-vanishes/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/earth.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;600&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;It’s me, facing a hard to solve problem. It’s a difficult one, and I’m having problems focusing. I make some coffee, I move to another room, and I’m already thinking of running to some coffee shop, forgetting that we’re still in a pandemic.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/10/when-my-world-vanishes/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2020/10/10/when-my-world-vanishes/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/10/10/when-my-world-vanishes/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  </item>


<item>
  <title>Scala Snippet: Unlawful Effects</title>
  <description>Unlawful/independent version of cats.effect.Effect.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/08/unlawful-effect.scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/unlawful-effect.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;600&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Unlawful/independent version of &lt;code&gt;cats.effect.Effect&lt;/code&gt;.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/08/unlawful-effect.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:36:39 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:36:39 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/10/08/unlawful-effect.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/10/08/unlawful-effect.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cats Effect</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Running integration tests, with Scala + sbt</title>
  <description>Scala sbt setup for separating unit tests from integrationt tests.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/05/running-integration-tests.scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/sbt-integration-tests.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;600&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala sbt setup for separating unit tests from integrationt tests.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/10/05/running-integration-tests.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:38:35 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:38:35 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/10/05/running-integration-tests.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/10/05/running-integration-tests.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>sbt</category>
  <category>Scala</category>
  <category>Testing</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Scala Snippet: Flow/Processor to Effect</title>
  <description>Converts an Akka Streams Flow into an In =&amp;gt; IO[Out] method, thus wrapping Flow into Cats-Effect’s IO.</description>
  <content:encoded>&lt;p&gt;Converts an Akka Streams &lt;code&gt;Flow&lt;/code&gt; into an &lt;code&gt;In =&gt; IO[Out]&lt;/code&gt; method, thus wrapping &lt;code&gt;Flow&lt;/code&gt; into Cats-Effect’s &lt;code&gt;IO&lt;/code&gt;.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/09/25/flow-processor-to-effect/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 15:56:30 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 15:56:30 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/09/25/flow-processor-to-effect/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/09/25/flow-processor-to-effect/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Akka</category>
  <category>Cats Effect</category>
  <category>Reactive Streams</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Privilege</title>
  <description>Today it’s my 38ᵗʰ birthday. I was born into privilege. Other people aren’t as lucky.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/09/10/privilege/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/fi-miu.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        &lt;figcaption&gt;&lt;p&gt;&lt;em&gt;My son ❤️&lt;/em&gt;&lt;/p&gt;&lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Today it’s my 38ᵗʰ birthday. I was born into privilege. Other people aren’t as lucky.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/09/10/privilege/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2020/09/10/privilege/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/09/10/privilege/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Personal</category>
  </item>


<item>
  <title>Scala Snippet: Safe Passwords</title>
  <description>For security, it’s not a good practice to keep sensitive data in RAM indefinitely.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/27/safe-password.scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/safe-password-snippet.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;For security, it’s not a good practice to keep sensitive data in RAM indefinitely.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/27/safe-password.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:45:46 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:45:46 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/08/27/safe-password.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/08/27/safe-password.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>JVM</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Sample Error Hierarchy in Scala</title>
  <description>Mimicking the HTTP error codes.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/14/error-hierarchy.scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/error-hierarchy.png?202510270536&quot; alt=&quot;&quot; width=&quot;1460&quot; height=&quot;730&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Mimicking the HTTP error codes.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/14/error-hierarchy.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 13:51:57 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 13:51:57 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/08/14/error-hierarchy.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/08/14/error-hierarchy.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Snippet: turn on JVM debugging in sbt</title>
  <description>Remote debugging can be used to debug externally executed programs, useful to activate in sbt in order to keep using it while debugging with your favorite IDE.</description>
  <content:encoded>&lt;p&gt;Remote debugging can be used to debug externally executed programs, useful to activate in &lt;code&gt;sbt&lt;/code&gt; in order to keep using it while debugging with your favorite IDE.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/13/sbt-fork-debug.sbt/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 14:00:47 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 14:00:47 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/08/13/sbt-fork-debug.sbt/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/08/13/sbt-fork-debug.sbt/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>sbt</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>TypeScript Sample: Flow Sensitive Typing</title>
  <description>Demonstrating Typescript’s untagged union types.</description>
  <content:encoded>&lt;p&gt;Demonstrating Typescript’s untagged union types.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/11/flow-sensitive-typing.ts/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 14:02:35 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 14:02:35 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/08/11/flow-sensitive-typing.ts/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/08/11/flow-sensitive-typing.ts/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>TypeScript</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Retry Failing Tasks with Cats and Scala</title>
  <description>Retry actions ending in failure via simple functions and Typelevel Cats type-classes.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/03/on-error-retry-loop/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/on-error-retry-loop.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;700&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Retry actions ending in failure via simple functions and Typelevel Cats type-classes.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/08/03/on-error-retry-loop/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2020/08/03/on-error-retry-loop/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/08/03/on-error-retry-loop/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  </item>


<item>
  <title>Scala Snippet: Cats-Effect Resource to Reactive Streams</title>
  <description>Cats-Effect’s Resource can’t be converted directly into a Reactive Streams Publisher. Beware!</description>
  <content:encoded>&lt;p&gt;Cats-Effect’s Resource can’t be converted directly into a Reactive Streams Publisher. Beware!&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/07/30/from-resource-to-reactivestreams.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 14:13:37 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 14:13:37 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/07/30/from-resource-to-reactivestreams.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/07/30/from-resource-to-reactivestreams.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Akka</category>
  <category>Cats Effect</category>
  <category>Reactive Streams</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>ExecutionContext Must Be Stack-safe</title>
  <description>Sample demonstrating that directly executing runnables in your ExecutionContext (with no stack-safety) is a really bad idea.</description>
  <content:encoded>&lt;p&gt;Sample demonstrating that directly executing runnables in your &lt;code&gt;ExecutionContext&lt;/code&gt; (with no stack-safety) is a really bad idea.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/05/27/future-stack-overflow.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 12:47:40 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 12:47:40 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/05/27/future-stack-overflow.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/05/27/future-stack-overflow.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Async</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Fatal Warnings and Linting in Scala</title>
  <description>Strengthen your code via -Xfatal-warnings, linting and piss off your colleagues with useful compiler errors.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/05/26/scala-fatal-warnings/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-xfatal-warnings.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;600&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Strengthen your code via &lt;code&gt;-Xfatal-warnings&lt;/code&gt;, linting and piss off your colleagues with useful compiler errors.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/05/26/scala-fatal-warnings/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2020/05/26/scala-fatal-warnings/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/05/26/scala-fatal-warnings/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  </item>


<item>
  <title>Parallelizing Work via a JavaScript Semaphore</title>
  <description>Simple and very effective implementation of a Semaphore, used for easily parallelizing work in JavaScript/TypeScript.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/04/21/javascript-semaphore/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/async-semaphore-typescript.png?202510270536&quot; alt=&quot;&quot; width=&quot;1600&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Simple and very effective implementation of a Semaphore, used for easily parallelizing work in JavaScript/TypeScript.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/04/21/javascript-semaphore/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 21 Apr 2020 16:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2020/04/21/javascript-semaphore/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/04/21/javascript-semaphore/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Asynchrony</category>
  <category>Concurrency</category>
  <category>JavaScript</category>
  <category>TypeScript</category>
  </item>


<item>
  <title>Blog Updates</title>
  <description>Dusted off my website, with big plans ahead.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/04/21/blog-updates/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://img.youtube.com/vi/RYmGT905Skc/maxresdefault.jpg?202510270536&quot; alt=&quot;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Dusted off my website, with big plans ahead.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/04/21/blog-updates/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 21 Apr 2020 10:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2020/04/21/blog-updates/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/04/21/blog-updates/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Personal</category>
  </item>


<item>
  <title>Python Snippet: Send Email via SMTP</title>
  <description>Python snippet for sending an email via SMTP.</description>
  <content:encoded>&lt;p&gt;Python snippet for sending an email via SMTP.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/03/18/send-mail.py/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 12:33:25 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 12:33:25 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/03/18/send-mail.py/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/03/18/send-mail.py/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>CLI</category>
  <category>Python</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Shell Snippet: Encrypt Files with AES256</title>
  <description>Quickly encrypt a message or a file for sending to your colleagues over unsecure messengers (Slack, etc).</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/02/18/encrypt.sh/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/encrypt.sh.png?202510270536&quot; alt=&quot;&quot; width=&quot;1436&quot; height=&quot;860&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Quickly encrypt a message or a file for sending to your colleagues over unsecure messengers (Slack, etc).&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2020/02/18/encrypt.sh/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 17 Jan 2023 11:17:38 +0000</dc:modified>
  <atom:modified>Tue, 17 Jan 2023 11:17:38 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/02/18/encrypt.sh/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2020/02/18/encrypt.sh/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>CLI</category>
  <category>Shell</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Haskell Snippet: Sierpinski Triangle</title>
  <description>A fun Haskell sample that draws a Sierpinski triangle via ASCII characters.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/11/29/sierpinski.hs/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/snippets/haskell-sierpinski.png?202510270536&quot; alt=&quot;&quot; width=&quot;1400&quot; height=&quot;788&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;A fun Haskell sample that draws a Sierpinski triangle via ASCII characters.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/11/29/sierpinski.hs/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 16:13:24 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 16:13:24 +0000</atom:modified>
  <link>https://alexn.org/blog/2019/11/29/sierpinski.hs/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2019/11/29/sierpinski.hs/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Haskell</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Regexp Replacement via Function in Java/Scala</title>
  <description>Replace in strings via regexp, with the replacement being calculated via a function.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-replace-all-function.png?202510270536&quot; alt=&quot;&quot; width=&quot;1238&quot; height=&quot;530&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Replace in strings via regexp, with the replacement being calculated via a function.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  <category>Ruby</category>
  </item>


<item>
  <title>Async Queue in TypeScript</title>
  <description>Production-ready, Promise-enabled async queue.</description>
  <content:encoded>&lt;p&gt;Production-ready, Promise-enabled async queue.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/10/07/async-queue.ts/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 15:50:37 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 15:50:37 +0000</atom:modified>
  <link>https://alexn.org/blog/2019/10/07/async-queue.ts/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2019/10/07/async-queue.ts/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Async</category>
  <category>JavaScript</category>
  <category>Snippet</category>
  <category>TypeScript</category>
  </item>


<item>
  <title>Scala Snippet: Blocking Task</title>
  <description>Monix Task implementation for wrapping (suspending) blocking I/O such
that it can be canceled.
s
Imported from gist.github.com.</description>
  <content:encoded>&lt;p&gt;Monix Task implementation for wrapping (suspending) blocking I/O such
that it can be canceled.
s
Imported from gist.github.com.

      &lt;/p&gt;
&lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/09/02/blocking-task.scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 12:15:08 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 12:15:08 +0000</atom:modified>
  <link>https://alexn.org/blog/2019/09/02/blocking-task.scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/snippets/2019/09/02/blocking-task.scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Async</category>
  <category>Monix</category>
  <category>Scala</category>
  <category>Snippet</category>
  </item>


<item>
  <title>Scala&#39;s isInstanceOf is an Anti-Pattern</title>
  <description>Scala has a much better way of discriminating between types. Scala has implicit parameters, with which you can describe type classes.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-instanceof-antipattern.png?202510270536&quot; alt=&quot;&quot; width=&quot;768&quot; height=&quot;574&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Scala has a much better way of discriminating between types. Scala has implicit parameters, with which you can describe type classes.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>Scala</category>
  </item>


<item>
  <title>On Bifunctor IO and Java&#39;s Checked Exceptions</title>
  <description>Bifunctor IO is a hot topic in the Scala community. Herein I’m expressing my dislike for it, as it shares the problems of Java’s Checked Exceptions.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2018/05/06/bifunctor-io/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/bio.png?202510270536&quot; alt=&quot;&quot; width=&quot;1368&quot; height=&quot;684&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Bifunctor IO is a hot topic in the Scala community. Herein I’m expressing my dislike for it, as it shares the problems of Java’s Checked Exceptions.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2018/05/06/bifunctor-io/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2018/05/06/bifunctor-io/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2018/05/06/bifunctor-io/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>FP</category>
  <category>Haskell</category>
  <category>OOP</category>
  <category>Scala</category>
  <category>Typelevel</category>
  </item>


<item>
  <title>In Defense of OOFP</title>
  <description>OOP versus Type Classes, exemplified and in defense of the Scala collections redesign.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2018/02/12/in-defense-oofp/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-stairs.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;1200&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;OOP versus Type Classes, exemplified and in defense of the Scala collections redesign.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2018/02/12/in-defense-oofp/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2018/02/12/in-defense-oofp/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2018/02/12/in-defense-oofp/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>OOP</category>
  <category>FP</category>
  <category>Haskell</category>
  <category>Scala</category>
  </item>


<item>
  <title>Minitest: Zero Crap Scala Testing Library</title>
  <description>Minitest is my minimal testing library that I’ve been using for developing Monix.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      Minitest is my minimal testing library that I’ve been using for developing Monix.

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Testing</category>
  <category>Scala</category>
  </item>


<item>
  <title>What is Functional Programming?</title>
  <description>FP is programming with (mathematical) functions, there’s no room for interpretation.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/10/15/functional-programming/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/functions.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;900&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;FP is programming with (mathematical) functions, there’s no room for interpretation.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/10/15/functional-programming/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 29 Sep 2023 05:51:11 +0000</dc:modified>
  <atom:modified>Fri, 29 Sep 2023 05:51:11 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/10/15/functional-programming/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/10/15/functional-programming/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>FP</category>
  <category>Haskell</category>
  <category>Scala</category>
  <category>JavaScript</category>
  </item>


<item>
  <title>Scala Days 2017 — Monix Task</title>
  <description>My presentation from Scala Days 2017, Chicago (April) and Copenhagen (June), on the design of Monix’s Task.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/10/13/scaladays-copenhagen/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://img.youtube.com/vi/wi97X8_JQUk/maxresdefault.jpg?202510270536&quot; alt=&quot;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;My presentation from Scala Days 2017, Chicago (April) and Copenhagen (June), on the design of Monix’s Task.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/10/13/scaladays-copenhagen/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/10/13/scaladays-copenhagen/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/10/13/scaladays-copenhagen/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Monix</category>
  <category>Video</category>
  </item>


<item>
  <title>Introduction</title>
  <description>JavaScript’s Promise leaks memory in recursive loops and what you can do about it.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/js-then.png?202510270536&quot; alt=&quot;&quot; width=&quot;1000&quot; height=&quot;1000&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;JavaScript’s Promise leaks memory in recursive loops and what you can do about it.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Concurrency</category>
  <category>FP</category>
  <category>JavaScript</category>
  </item>


<item>
  <title>Automatic Releases to Maven Central with Travis and SBT</title>
  <description>Enabling automatic releases for your open source Scala project with Travis and SBT.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/sbt.png?202510270536&quot; alt=&quot;&quot; width=&quot;641&quot; height=&quot;277&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Enabling automatic releases for your open source Scala project with Travis and SBT.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>sbt</category>
  <category>Scala</category>
  </item>


<item>
  <title>Functional Programming Inception (Presentation)</title>
  <description>My presentation from the Bucharest FP meetup.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/03/15/fp-inception/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/2017-fp-inception.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;820&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;My presentation from the Bucharest FP meetup.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/03/15/fp-inception/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/03/15/fp-inception/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/03/15/fp-inception/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Monix</category>
  </item>


<item>
  <title>Asynchronous Programming and Scala</title>
  <description>Asynchrony is everywhere and it subsumes concurrency. This article explains what asynchronous processing is and its challenges.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/01/30/asynchronous-programming-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/nondet.png?202510270536&quot; alt=&quot;&quot; width=&quot;775&quot; height=&quot;458&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Asynchrony is everywhere and it subsumes concurrency. This article explains what asynchronous processing is and its challenges.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/01/30/asynchronous-programming-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/01/30/asynchronous-programming-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/01/30/asynchronous-programming-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Asynchrony</category>
  <category>Best Of</category>
  <category>Concurrency</category>
  <category>Multithreading</category>
  <category>Scala</category>
  </item>


<item>
  <title>Fixing scala.collection.Iterator</title>
  <description>The venerable Iterator interface we all love and hate could use some improvements. This is a follow-up to my previous article, in which I talked about getting rid of Traversable because the Iterable and Iterator duo is enough for Scala’s standard library.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/01/16/iterator/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      The venerable Iterator interface we all love and hate could use some improvements. This is a follow-up to my previous article, in which I talked about getting rid of Traversable because the Iterable and Iterator duo is enough for Scala’s standard library.

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/01/16/iterator/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/01/16/iterator/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/01/16/iterator/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  </item>


<item>
  <title>Why Scala&#39;s Traversable Is Bad Design</title>
  <description>Traversable was a design mistake, is redundant and we should remove it.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/01/13/traversable/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Traversable was a design mistake, is redundant and we should remove it.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2017/01/13/traversable/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2017/01/13/traversable/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/01/13/traversable/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Scala</category>
  </item>


<item>
  <title>Add to NewsBlur Bookmarklet</title>
  <description>An Add to NewsBlur bookmarklet that you can copy-paste for iPhone/iPad/Android usage</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/11/11/newsblur-bookmarklet/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/newsblur.png?202510270536&quot; alt=&quot;&quot; width=&quot;512&quot; height=&quot;512&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;An Add to NewsBlur bookmarklet that you can copy-paste for iPhone/iPad/Android usage&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/11/11/newsblur-bookmarklet/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2016/11/11/newsblur-bookmarklet/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/11/11/newsblur-bookmarklet/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Web</category>
  </item>


<item>
  <title>Monix Task vs Scalaz vs Future, The Benchmark</title>
  <description>The Task in Monix has really good performance. See the benchmark.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/08/25/monix-task-performance/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/monix-1024.png?202510270536&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;1024&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;The Task in Monix has really good performance. See the benchmark.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/08/25/monix-task-performance/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2016/08/25/monix-task-performance/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/08/25/monix-task-performance/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Monix</category>
  <category>Typelevel</category>
  </item>


<item>
  <title>Akka &amp; Monix - Typelevel Summit, Oslo 2016</title>
  <description>Presentation from Typelevel Summit, Oslo, 2016, about my experience in dealing with modeling behavior by processing asynchronous soft-real time signals using Akka &amp;amp; Monix.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/05/15/monix-observable/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://img.youtube.com/vi/CQxviYlAKaY/maxresdefault.jpg?202510270536&quot; alt=&quot;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Presentation from Typelevel Summit, Oslo, 2016, about my experience in dealing with modeling behavior by processing asynchronous soft-real time signals using Akka &amp; Monix.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/05/15/monix-observable/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 15 May 2016 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2016/05/15/monix-observable/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/05/15/monix-observable/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Monix</category>
  <category>Video</category>
  </item>


<item>
  <title>Monix Task - flatMap(Oslo) 2016</title>
  <description>My presentation from flatMap(Oslo) 2016. It’s about the Monix Task, a new type for dealing with asynchronous processing on top of Scala and Scala.js.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/05/10/monix-task/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://img.youtube.com/vi/rftcbxj7et0/maxresdefault.jpg?202510270536&quot; alt=&quot;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;My presentation from flatMap(Oslo) 2016. It’s about the Monix Task, a new type for dealing with asynchronous processing on top of Scala and Scala.js.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2016/05/10/monix-task/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 10 May 2016 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2016/05/10/monix-task/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/05/10/monix-task/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Monix</category>
  <category>Scala</category>
  <category>Video</category>
  </item>


<item>
  <title>Avoid Javaisms: Mocks, Stubs, DI is Code Smell</title>
  <description>Such practices represent clear signals for code smell, meaning code that sucks as a symptom of a bigger problem, one of design. The lumping together of these practices is not an accident, as they are related.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/skunk.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;630&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Such practices represent clear signals for code smell, meaning code that sucks as a symptom of a bigger problem, one of design. The lumping together of these practices is not an accident, as they are related.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  </item>


<item>
  <title>Monifu vs Akka Streams</title>
  <description>Back in June I attended
Scala Days in
Amsterdam and participated at a talk by Mathias Doenitz on
The Reactive Streams Implementation Landscape.
It was a good talk, yet I felt a little bias towards Akka Streams,
which is natural coming from somebody that is contributing to Akka,
but let me give you the perspective from the other side.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/monifu.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;756&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      Back in June I attended
Scala Days in
Amsterdam and participated at a talk by Mathias Doenitz on
The Reactive Streams Implementation Landscape.
It was a good talk, yet I felt a little bias towards Akka Streams,
which is natural coming from somebody that is contributing to Akka,
but let me give you the perspective from the other side.

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 06 Sep 2015 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Reactive Streams</category>
  </item>


<item>
  <title>Scala Best Practices</title>
  <description>This is a collection of best practices for Scala, something to get you started.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2014/10/20/scala-best-practices/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      This is a collection of best practices for Scala, something to get you started.

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2014/10/20/scala-best-practices/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2014/10/20/scala-best-practices/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2014/10/20/scala-best-practices/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Best Practices</category>
  </item>


<item>
  <title>Resources for Learning Scala</title>
  <description>Getting started with a new programming language shouldn&apos;t be hard,
  however navigating the web for resources on getting started with Scala
  can be a doubting experience, as many such resources are either out of
  date, or wrong, or both. This post is intended to reduce the noise for
  my colleagues and other people that are interested in Scala
  development.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2013/05/13/getting-started-with-scala/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  Getting started with a new programming language shouldn&apos;t be hard,
  however navigating the web for resources on getting started with Scala
  can be a doubting experience, as many such resources are either out of
  date, or wrong, or both. This post is intended to reduce the noise for
  my colleagues and other people that are interested in Scala
  development.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2013/05/13/getting-started-with-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 13 May 2013 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2013/05/13/getting-started-with-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2013/05/13/getting-started-with-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Books</category>
  </item>


<item>
  <title>Towards a Better AtomicReference</title>
  <description>The
  AtomicReference
  is like a container for a volatile reference. Usage of volatile
  references is useful for the issue of
  visibility
  in concurrent code, however AtomicReference also supports the atomic
  Compare-and-Swap
  operation (CAS for short), which is the pillar of all non-blocking
  data-structures and algorithms built on top of the JVM, including
  complex ones like the ConcurrentLinkedQueue, an implementation based
  on the
  Michael-Scott non-blocking queues.</description>
  <content:encoded>&lt;p&gt;The
  AtomicReference
  is like a container for a volatile reference. Usage of volatile
  references is useful for the issue of
  visibility
  in concurrent code, however AtomicReference also supports the atomic
  Compare-and-Swap
  operation (CAS for short), which is the pillar of all non-blocking
  data-structures and algorithms built on top of the JVM, including
  complex ones like the ConcurrentLinkedQueue, an implementation based
  on the
  Michael-Scott non-blocking queues.


      &lt;/p&gt;
&lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2013/05/07/towards-better-atomicreference-scala/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 07 May 2013 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2013/05/07/towards-better-atomicreference-scala/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2013/05/07/towards-better-atomicreference-scala/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Java</category>
  <category>Multithreading</category>
  <category>Concurrency</category>
  </item>


<item>
  <title>JVM Multithreading: Monitor Locks and Visibility</title>
  <description>Multithreading is a pain to deal with. While interviewing developers,
  I noticed that surprisingly many don&apos;t have knowledge about this topic
  and I can&apos;t blame them really. However, in this day and age, for some
  problem domains building highly-concurrent architectures may be
  paramount to the success of demanding projects. As you&apos;ll see, there
  are many high level solutions, but I personally prefer to learn with a
  bottom up approach, starting from the basic and unsafe primitives, as
  understanding the problem is always the first step to real solutions.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/ferrari.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  Multithreading is a pain to deal with. While interviewing developers,
  I noticed that surprisingly many don&apos;t have knowledge about this topic
  and I can&apos;t blame them really. However, in this day and age, for some
  problem domains building highly-concurrent architectures may be
  paramount to the success of demanding projects. As you&apos;ll see, there
  are many high level solutions, but I personally prefer to learn with a
  bottom up approach, starting from the basic and unsafe primitives, as
  understanding the problem is always the first step to real solutions.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>FP</category>
  <category>Scala</category>
  <category>Java</category>
  <category>Multithreading</category>
  <category>Concurrency</category>
  </item>


<item>
  <title>Notes On JavaScript Client-side Development</title>
  <description>Client-side JavaScript development can be quite overwhelming, even for senior developers. I’m describing here what I did in a recent piece of client-side functionality to keep my sanity. This interface I’m talking about is served on mobile-phones, so it must be pretty bloat-free, adding salt over injury.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/11/07/notes-javascript-development/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/javascript.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1280&quot; height=&quot;720&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Client-side JavaScript development can be quite overwhelming, even for senior developers. I’m describing here what I did in a recent piece of client-side functionality to keep my sanity. This interface I’m talking about is served on mobile-phones, so it must be pretty bloat-free, adding salt over injury.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/11/07/notes-javascript-development/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2012/11/07/notes-javascript-development/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/11/07/notes-javascript-development/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>JavaScript</category>
  <category>FP</category>
  <category>Browser</category>
  <category>Web</category>
  </item>


<item>
  <title>On Scala, Functional Programming and Type-Classes</title>
  <description>I’ve been following the excellent Coursera course on Functional Programming Principles in Scala led by Martin Odersky. This was not my first encounter with Scala as I’ve been using it including for my day job.
In this article I’m describing my impressions of the Scala programming language and why I fel in love with it.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;675&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I’ve been following the excellent Coursera course on &lt;a href=&quot;https://www.coursera.org/course/progfun&quot;&gt;Functional Programming Principles in Scala&lt;/a&gt; led by Martin Odersky. This was not my first encounter with Scala as I’ve been using it including for my day job.
In this article I’m describing my impressions of the Scala programming language and why I fel in love with it.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Languages</category>
  <category>FP</category>
  <category>Scala</category>
  </item>


<item>
  <title>How To Build a Naive Bayes Classifier</title>
  <description>In machine learning a classifier is able to predict, given an input, a probability distribution over a set of categories. Some use-cases for building a classifier: spam detection, for example you could build your own Akismet API, automatic assignment of categories to a set of items, automatic detection of the primary language (e.g. Google Translate), sentiment analysis, which in simple terms refers to discovering if an opinion is about love or hate about a certain topic.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/conditional-prob.png?202510270536&quot; alt=&quot;&quot; width=&quot;490&quot; height=&quot;272&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;In machine learning a classifier is able to predict, given an input, a probability distribution over a set of categories. Some use-cases for building a classifier: spam detection, for example you could build your own Akismet API, automatic assignment of categories to a set of items, automatic detection of the primary language (e.g. Google Translate), sentiment analysis, which in simple terms refers to discovering if an opinion is about love or hate about a certain topic.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 09 Feb 2012 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 25 Jan 2020 00:00:00 +0000</dc:modified>
  <atom:modified>Sat, 25 Jan 2020 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>Algorithms</category>
  <category>Mining</category>
  <category>Ruby</category>
  <category>Math</category>
  </item>


<item>
  <title>Data Mining: Finding Similar Items and Users</title>
  <description>How to find related items? Here are recipes based on really simple formulas. If you pay attention, this technique is used all over the web (like on Amazon) to personalize the user experience and increase conversion rates. Because we want to give kick-ass product recommendations.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/cosine-distance.png?202510270536&quot; alt=&quot;&quot; width=&quot;1285&quot; height=&quot;830&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;How to find related items? Here are recipes based on really simple formulas. If you pay attention, this technique is used all over the web (like on Amazon) to personalize the user experience and increase conversion rates. Because we want to give kick-ass product recommendations.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 16 Jan 2012 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 22 Oct 2025 05:56:17 +0000</dc:modified>
  <atom:modified>Wed, 22 Oct 2025 05:56:17 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>Algorithms</category>
  <category>Mining</category>
  <category>Ruby</category>
  <category>Math</category>
  </item>


<item>
  <title>Blogging Platform for Hackers</title>
  <description>Host your own static website on Heroku’s free plan, use Google’s App Engine as a CDN, keep Heroku’s free dyno alive, generate the website via Jekyll.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/01/05/blogging-for-hackers/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/jekyll.png?202510270536&quot; alt=&quot;&quot; width=&quot;960&quot; height=&quot;489&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Host your own static website on Heroku’s free plan, use Google’s App Engine as a CDN, keep Heroku’s free dyno alive, generate the website via Jekyll.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2012/01/05/blogging-for-hackers/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate>
  <dc:modified>Thu, 19 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Thu, 19 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/01/05/blogging-for-hackers/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/01/05/blogging-for-hackers/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Blogging</category>
  <category>Server</category>
  <category>Cloud</category>
  <category>Heroku</category>
  <category>Ruby</category>
  <category>Jekyll</category>
  </item>


<item>
  <title>Crawling the Android Marketplace</title>
  <description>I had a very specific need for fetching the details for some apps in the Android marketplace, in an automated manner. Here I’m describing a script that I used to crawl the marketplace back in 2011.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/wolf-spider.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;947&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I had a very specific need for fetching the details for some apps in the Android marketplace, in an automated manner. Here I’m describing a script that I used to crawl the marketplace back in 2011.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 18 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Wed, 18 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Python</category>
  <category>Android</category>
  <category>Web</category>
  <category>API</category>
  </item>


<item>
  <title>Android Learning Resources</title>
  <description>Starting out learning Android development may be intimidating at first, as with any new platform of reasonable complexity you’ll have a lot to learn. However the learning process is fun. So here are some learning resources that I’m currently following.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/12/12/android-learning-resources/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/android-development.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Starting out learning Android development may be intimidating at first, as with any new platform of reasonable complexity you’ll have a lot to learn. However the learning process is fun. So here are some learning resources that I’m currently following.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/12/12/android-learning-resources/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Mon, 12 Dec 2011 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 18 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Wed, 18 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/12/12/android-learning-resources/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/12/12/android-learning-resources/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Books</category>
  <category>Android</category>
  </item>


<item>
  <title>Earning Money as an Amazon Affiliate</title>
  <description>I published an article that I&apos;ve meant to publish for a long
  time. I&apos;m usually lazy to not bother writing many articles, however
  this time I also thought about doing an experiment - you see I&apos;m (1)
  on a tight budget and (2) a cheap bastard - so what if I could get
  enough money to pay for my monthly hosting on Linode, while
  satisfying my urge to write from time to time?</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/amazon-associates.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;650&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  I published an article that I&apos;ve meant to publish for a long
  time. I&apos;m usually lazy to not bother writing many articles, however
  this time I also thought about doing an experiment - you see I&apos;m (1)
  on a tight budget and (2) a cheap bastard - so what if I could get
  enough money to pay for my monthly hosting on Linode, while
  satisfying my urge to write from time to time?

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 29 Nov 2011 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  </item>


<item>
  <title>4 Books For Learning to Design, The Hard Way</title>
  <description>I present some books I enjoyed, which is the path I’m taking to get better at design and user experience.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/book-design-all.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1915&quot; height=&quot;648&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I present some books I enjoyed, which is the path I’m taking to get better at design and user experience.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 25 Nov 2011 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Jan 2023 07:03:55 +0000</dc:modified>
  <atom:modified>Mon, 16 Jan 2023 07:03:55 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>Books</category>
  </item>


<item>
  <title>How I Use Flickr: For Backup</title>
  <description>I’ve got a growing number of personal pictures and the collection is growing since 2003 … Pro accounts on Flickr have unlimited storage and can upload and access full-resolution pictures.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/10/29/how-i-use-flickr/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/flickr.jpg?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;800&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;I’ve got a growing number of personal pictures and the collection is growing since 2003 … Pro accounts on Flickr have unlimited storage and can upload and access full-resolution pictures.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/10/29/how-i-use-flickr/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sat, 29 Oct 2011 00:00:00 +0000</pubDate>
  <dc:modified>Sun, 10 Apr 2022 10:02:46 +0000</dc:modified>
  <atom:modified>Sun, 10 Apr 2022 10:02:46 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/10/29/how-i-use-flickr/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/10/29/how-i-use-flickr/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Cloud</category>
  <category>API</category>
  <category>Ruby</category>
  </item>


<item>
  <title>Why I Find Heroku Suboptimal</title>
  <description>Heroku is great. It basically allows you to avoid growing-up. The deployment itself couldn’t be simpler, and when browsing their web interface for available add-ons, I feel like a child in a candy-store. But I’ve outgrown it.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/heroku.png?202510270536&quot; alt=&quot;&quot; width=&quot;1440&quot; height=&quot;608&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;Heroku is great. It basically allows you to avoid growing-up. The deployment itself couldn’t be simpler, and when browsing their web interface for available add-ons, I feel like a child in a candy-store. But I’ve outgrown it.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 23 Oct 2011 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 16:15:16 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 16:15:16 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Heroku</category>
  <category>Server</category>
  <category>Cloud</category>
  </item>


<item>
  <title>Cross-Domain, Cross-Browser AJAX Requests</title>
  <description>This article describes how to make cross-browser requests, in all browsers (including IExplorer 6), using web standards along with fallbacks and without using a proxy or JSONP (which is limited and awkward) – as long as you control the destination server, or if the destination server allows.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/03/24/cross-domain-requests/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/cors-ajax.png?202510270536&quot; alt=&quot;&quot; width=&quot;1368&quot; height=&quot;328&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;This article describes how to make cross-browser requests, in all browsers (including IExplorer 6), using web standards along with fallbacks and without using a proxy or JSONP (which is limited and awkward) – as long as you control the destination server, or if the destination server allows.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2011/03/24/cross-domain-requests/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 14 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Sat, 14 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/03/24/cross-domain-requests/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/03/24/cross-domain-requests/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>JavaScript</category>
  <category>Browser</category>
  <category>Web</category>
  </item>


<item>
  <title>I hate NULL and all its variants!</title>
  <description>How many times have you had a chain of methods like this (example showing BeautifulSoup in action) …</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2010/05/25/i-hate-null/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/beautiful-soup.png?202510270536&quot; alt=&quot;&quot; width=&quot;1542&quot; height=&quot;592&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
    How many times have you had a chain of methods like this (example showing BeautifulSoup in action) …


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2010/05/25/i-hate-null/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Tue, 25 May 2010 00:00:00 +0000</pubDate>
  <link>https://alexn.org/blog/2010/05/25/i-hate-null/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2010/05/25/i-hate-null/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Python</category>
  </item>


<item>
  <title>Introduction</title>
  <description>FreeSWITCH is a free and open source application server for real-time communication, WebRTC, telecommunications, video and Voice over Internet Protocol. Let’s build a VoIP dialer with it.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/freeswitch1.png?202510270536&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;674&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      &lt;p&gt;FreeSWITCH is a free and open source application server for real-time communication, WebRTC, telecommunications, video and Voice over Internet Protocol. Let’s build a VoIP dialer with it.&lt;/p&gt;

      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Fri, 20 Feb 2009 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 01 Apr 2022 16:13:50 +0000</dc:modified>
  <atom:modified>Fri, 01 Apr 2022 16:13:50 +0000</atom:modified>
  <link>https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  <category>Best Of</category>
  <category>JavaScript</category>
  <category>Perl</category>
  </item>


<item>
  <title>Using the Best Tools in Programming: Not Really Doable</title>
  <description>There&apos;s something that bothers me when it comes to starting a new project. You can&apos;t really use the best tool for a certain job, if that tool is not integrated with the rest of your platform. Let me explain.</description>
  <content:encoded>&lt;div class=&quot;post-featured-image&quot;&gt;
    
      &lt;figure&gt;
        &lt;a href=&quot;https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable/?pk_campaign=newsletter&quot; title=&quot;Open article in browser&quot;&gt;
          &lt;img src=&quot;https://alexn.org/assets/media/articles/tools.png?202510270536&quot; alt=&quot;&quot; width=&quot;768&quot; height=&quot;768&quot; style=&quot;max-width:100%;height:auto;&quot;&gt;
        &lt;/a&gt;
        
      &lt;/figure&gt;
    &lt;/div&gt;
  
      
  There&apos;s something that bothers me when it comes to starting a new project. You can&apos;t really use the best tool for a certain job, if that tool is not integrated with the rest of your platform. Let me explain.


      &lt;p&gt;
        &lt;a href=&quot;https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable/?pk_campaign=newsletter&quot;&gt;Read article →&lt;/a&gt;
      &lt;/p&gt;</content:encoded>
  <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 19 Sep 2022 08:17:51 +0000</dc:modified>
  <atom:modified>Mon, 19 Sep 2022 08:17:51 +0000</atom:modified>
  <link>https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable/?pk_campaign=newsletter</link>
  <guid isPermaLink="true">https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable/</guid>
  <dc:creator>Alexandru Nedelcu</dc:creator>
  <category>Blog</category>
  </item>
</channel>
</rss>
